{"ocen": {"id": "f8e86300", "name": "", "kind": "namespace", "namespaces": {"std": {"id": "f8e87d80", "name": "std", "kind": "namespace", "structs": {"File": {"id": "fa14c600", "name": "File", "kind": "struct", "is_templated": false, "extern": "FILE", "fields": [], "methods": {"write": {"id": "f8ecb930", "name": "write", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "this", "type": "&{{fa14c600}}"}, {"name": "buf", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::File::write", "type": "{{fa14b3e0}}"}}, "open": {"id": "f8ec63d0", "name": "open", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "path", "type": "{{fa14c3c0}}"}, {"name": "mode", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::File::open", "type": "&{{fa14c600}}"}}, "close": {"id": "f8ec9730", "name": "close", "kind": "method", "parent": "{{fa14c600}}", "extern": "fclose", "params": [{"name": "this", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::File::close", "type": "{{fa14ae40}}"}}, "exists": {"id": "f8ed2e90", "name": "exists", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::File::exists", "type": "{{fa14acb0}}"}}, "slurp": {"id": "f8ecd3f0", "name": "slurp", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "this", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::File::slurp", "type": "{{fa14c3c0}}"}}, "puts": {"id": "f8ed5150", "name": "puts", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "this", "type": "&{{fa14c600}}"}, {"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::File::puts", "type": "{{fa14ae40}}"}}, "read": {"id": "f8ec9e70", "name": "read", "kind": "method", "parent": "{{fa14c600}}", "params": [{"name": "this", "type": "&{{fa14c600}}"}, {"name": "buf", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::File::read", "type": "{{fa14b3e0}}"}}}}}, "functions": {"exit": {"id": "f8ed6a90", "name": "exit", "kind": "function", "extern": "exit", "params": [{"name": "code", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::exit", "type": "{{fa14ae40}}"}}, "panic": {"id": "f8ed72e0", "name": "panic", "kind": "function", "params": [{"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::panic", "type": "{{fa14ae40}}"}}, "min": {"id": "f8ee8a50", "name": "min", "kind": "function", "params": [{"name": "a", "type": "{{fa14b3e0}}"}, {"name": "b", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::min", "type": "{{fa14b3e0}}"}}, "max": {"id": "f8ee9ca0", "name": "max", "kind": "function", "params": [{"name": "a", "type": "{{fa14b3e0}}"}, {"name": "b", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::max", "type": "{{fa14b3e0}}"}}}, "namespaces": {"libc": {"id": "f8ea6500", "description": "Bindings to libc functions\n", "name": "libc", "kind": "namespace", "constants": {"SEEK_SET": {"id": "f8ebe770", "name": "SEEK_SET", "kind": "constant", "type": "{{fa14b3e0}}", "extern": "SEEK_SET"}, "SEEK_CUR": {"id": "f8ebea80", "name": "SEEK_CUR", "kind": "constant", "type": "{{fa14b3e0}}", "extern": "SEEK_CUR"}, "SEEK_END": {"id": "f8ebed90", "name": "SEEK_END", "kind": "constant", "type": "{{fa14b3e0}}", "extern": "SEEK_END"}}, "functions": {"malloc": {"id": "f8eb7620", "name": "malloc", "kind": "function", "extern": "malloc", "params": [{"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::libc::malloc", "type": "{{fa14c140}}"}}, "realloc": {"id": "f8eb7c70", "name": "realloc", "kind": "function", "extern": "realloc", "params": [{"name": "old", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::libc::realloc", "type": "{{fa14c140}}"}}, "calloc": {"id": "f8eb84f0", "name": "calloc", "kind": "function", "extern": "calloc", "params": [{"name": "size", "type": "{{fa14bb30}}"}, {"name": "elem_size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::libc::calloc", "type": "{{fa14c140}}"}}, "free": {"id": "f8eb8d70", "name": "free", "kind": "function", "extern": "free", "params": [{"name": "ptr", "type": "{{fa14c140}}"}], "return": {"description": "return for std::libc::free", "type": "{{fa14ae40}}"}}, "exit": {"id": "f8eb93c0", "name": "exit", "kind": "function", "extern": "exit", "params": [{"name": "code", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::libc::exit", "type": "{{fa14ae40}}"}}, "getenv": {"id": "f8eb9a10", "name": "getenv", "kind": "function", "extern": "getenv", "params": [{"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::getenv", "type": "{{fa14c3c0}}"}}, "system": {"id": "f8eba060", "name": "system", "kind": "function", "extern": "system", "params": [{"name": "cmd", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::system", "type": "{{fa14b3e0}}"}}, "fopen": {"id": "f8eba6b0", "name": "fopen", "kind": "function", "extern": "fopen", "params": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "mode", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::fopen", "type": "&{{fa14c600}}"}}, "fclose": {"id": "f8ebb020", "name": "fclose", "kind": "function", "extern": "fclose", "params": [{"name": "file", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::libc::fclose", "type": "{{fa14b3e0}}"}}, "fread": {"id": "f8ebb760", "name": "fread", "kind": "function", "extern": "fread", "params": [{"name": "ptr", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}, {"name": "count", "type": "{{fa14bb30}}"}, {"name": "file", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::libc::fread", "type": "{{fa14b3e0}}"}}, "fwrite": {"id": "f8ebc530", "name": "fwrite", "kind": "function", "extern": "fwrite", "params": [{"name": "ptr", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}, {"name": "count", "type": "{{fa14bb30}}"}, {"name": "file", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::libc::fwrite", "type": "{{fa14b3e0}}"}}, "ftell": {"id": "f8ebd300", "name": "ftell", "kind": "function", "extern": "ftell", "params": [{"name": "file", "type": "&{{fa14c600}}"}], "return": {"description": "return for std::libc::ftell", "type": "{{fa14b3e0}}"}}, "fseek": {"id": "f8ebda40", "name": "fseek", "kind": "function", "extern": "fseek", "params": [{"name": "file", "type": "&{{fa14c600}}"}, {"name": "offset", "type": "{{fa14b3e0}}"}, {"name": "whence", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::libc::fseek", "type": "{{fa14b3e0}}"}}, "strcmp": {"id": "f8ebef10", "name": "strcmp", "kind": "function", "extern": "strcmp", "params": [{"name": "a", "type": "{{fa14c3c0}}"}, {"name": "b", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strcmp", "type": "{{fa14b3e0}}"}}, "strlen": {"id": "f8ebf790", "name": "strlen", "kind": "function", "extern": "strlen", "params": [{"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strlen", "type": "{{fa14bb30}}"}}, "strcpy": {"id": "f8ebfde0", "name": "strcpy", "kind": "function", "extern": "strcpy", "params": [{"name": "dst", "type": "{{fa14c3c0}}"}, {"name": "src", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strcpy", "type": "{{fa14c3c0}}"}}, "strcat": {"id": "f8ec0660", "name": "strcat", "kind": "function", "extern": "strcat", "params": [{"name": "dst", "type": "{{fa14c3c0}}"}, {"name": "src", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strcat", "type": "{{fa14c3c0}}"}}, "strstr": {"id": "f8ec0ff0", "name": "strstr", "kind": "function", "extern": "strstr", "params": [{"name": "haystack", "type": "{{fa14c3c0}}"}, {"name": "needle", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strstr", "type": "{{fa14c3c0}}"}}, "strchr": {"id": "f8ec1870", "name": "strchr", "kind": "function", "extern": "strchr", "params": [{"name": "s", "type": "{{fa14c3c0}}"}, {"name": "c", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::libc::strchr", "type": "{{fa14c3c0}}"}}, "strsep": {"id": "f8ec20f0", "name": "strsep", "kind": "function", "extern": "strsep", "params": [{"name": "str", "type": "&{{fa14c3c0}}"}, {"name": "delim", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::libc::strsep", "type": "{{fa14c3c0}}"}}, "strerror": {"id": "f8ec2a60", "name": "strerror", "kind": "function", "extern": "strerror", "params": [{"name": "errnum", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::libc::strerror", "type": "{{fa14c3c0}}"}}, "memcpy": {"id": "f8ec30b0", "name": "memcpy", "kind": "function", "extern": "memcpy", "params": [{"name": "dest", "type": "{{fa14c140}}"}, {"name": "src", "type": "{{fa14c140}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::libc::memcpy", "type": "{{fa14ae40}}"}}, "memset": {"id": "f8ec3b60", "name": "memset", "kind": "function", "extern": "memset", "params": [{"name": "dest", "type": "{{fa14c140}}"}, {"name": "c", "type": "{{fa14b3e0}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::libc::memset", "type": "{{fa14ae40}}"}}, "isdigit": {"id": "f8ec4610", "name": "isdigit", "kind": "function", "extern": "isdigit", "params": [{"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for std::libc::isdigit", "type": "{{fa14acb0}}"}}, "isalpha": {"id": "f8ec4c60", "name": "isalpha", "kind": "function", "extern": "isalpha", "params": [{"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for std::libc::isalpha", "type": "{{fa14acb0}}"}}, "isalnum": {"id": "f8ec52b0", "name": "isalnum", "kind": "function", "extern": "isalnum", "params": [{"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for std::libc::isalnum", "type": "{{fa14acb0}}"}}, "isprint": {"id": "f8ec5900", "name": "isprint", "kind": "function", "extern": "isprint", "params": [{"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for std::libc::isprint", "type": "{{fa14acb0}}"}}}}, "compact_map": {"id": "f9f27110", "description": "An order-preserving hash map.\n\nUses open addressing with linear probing. Inspired by Python's dict.\n", "name": "compact_map", "kind": "namespace", "structs": {"Item": {"id": "fa14c710", "name": "Item", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "hash", "type": "{{fa14bb30}}"}, {"name": "key", "type": "K"}, {"name": "value", "type": "V"}], "methods": {}}, "Map": {"id": "fa14c820", "name": "Map", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "items", "type": "&{{fa14d3d0}}<{{fa14c710}}<K, V>>"}, {"name": "indices", "type": "&{{fa14b3e0}}"}, {"name": "capacity", "type": "{{fa14bb30}}"}], "methods": {"at": {"id": "f9f836b0", "name": "at", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::compact_map::Map::at", "type": "V"}}, "free": {"id": "f9f61450", "name": "free", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}], "return": {"description": "return for std::compact_map::Map::free", "type": "{{fa14ae40}}"}}, "get_index": {"id": "f9f62d50", "name": "get_index", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "key", "type": "K"}, {"name": "hash", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::compact_map::Map::get_index", "type": "{{fa14bb30}}"}}, "insert": {"id": "f9f79390", "name": "insert", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "key", "type": "K"}, {"name": "value", "type": "V"}], "return": {"description": "return for std::compact_map::Map::insert", "type": "{{fa14ae40}}"}}, "remove": {"id": "f9f6aa60", "name": "remove", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::compact_map::Map::remove", "type": "{{fa14ae40}}"}}, "get": {"id": "f9f7fc60", "name": "get", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "key", "type": "K"}, {"name": "defolt", "type": "V"}], "return": {"description": "return for std::compact_map::Map::get", "type": "V"}}, "iter_keys": {"id": "f9f89260", "name": "iter_keys", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}], "return": {"description": "return for std::compact_map::Map::iter_keys", "type": "{{fa14c930}}<K, V>"}}, "is_empty": {"id": "f9f870d0", "name": "is_empty", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}], "return": {"description": "return for std::compact_map::Map::is_empty", "type": "{{fa14acb0}}"}}, "resize": {"id": "f9f72b30", "name": "resize", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}, {"name": "new_capacity", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::compact_map::Map::resize", "type": "{{fa14ae40}}"}}, "iter_values": {"id": "f9f8acc0", "name": "iter_values", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}], "return": {"description": "return for std::compact_map::Map::iter_values", "type": "{{fa14ca40}}<K, V>"}}, "new": {"id": "f9f5af00", "name": "new", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "capacity", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::compact_map::Map::new", "type": "&{{fa14c820}}<K, V>"}}, "iter": {"id": "f9f877c0", "name": "iter", "kind": "method", "parent": "{{fa14c820}}", "params": [{"name": "this", "type": "&{{fa14c820}}"}], "return": {"description": "return for std::compact_map::Map::iter", "type": "{{fa14d4e0}}<{{fa14c710}}<K, V>>"}}}}, "KeyIterator": {"id": "fa14c930", "name": "KeyIterator", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "iter", "type": "{{fa14d4e0}}<{{fa14c710}}<K, V>>"}], "methods": {"cur": {"id": "f9f8f220", "name": "cur", "kind": "method", "parent": "{{fa14c930}}", "params": [{"name": "this", "type": "&{{fa14c930}}"}], "return": {"description": "return for std::compact_map::KeyIterator::cur", "type": "K"}}, "next": {"id": "f9f8e500", "name": "next", "kind": "method", "parent": "{{fa14c930}}", "params": [{"name": "this", "type": "&{{fa14c930}}"}], "return": {"description": "return for std::compact_map::KeyIterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f9f8d720", "name": "has_value", "kind": "method", "parent": "{{fa14c930}}", "params": [{"name": "this", "type": "&{{fa14c930}}"}], "return": {"description": "return for std::compact_map::KeyIterator::has_value", "type": "{{fa14acb0}}"}}}}, "ValueIterator": {"id": "fa14ca40", "name": "ValueIterator", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "iter", "type": "{{fa14d4e0}}<{{fa14c710}}<K, V>>"}], "methods": {"cur": {"id": "f9f27300", "name": "cur", "kind": "method", "parent": "{{fa14ca40}}", "params": [{"name": "this", "type": "&{{fa14ca40}}"}], "return": {"description": "return for std::compact_map::ValueIterator::cur", "type": "V"}}, "next": {"id": "f9f91e60", "name": "next", "kind": "method", "parent": "{{fa14ca40}}", "params": [{"name": "this", "type": "&{{fa14ca40}}"}], "return": {"description": "return for std::compact_map::ValueIterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f9f91080", "name": "has_value", "kind": "method", "parent": "{{fa14ca40}}", "params": [{"name": "this", "type": "&{{fa14ca40}}"}], "return": {"description": "return for std::compact_map::ValueIterator::has_value", "type": "{{fa14acb0}}"}}}}}, "constants": {"INDEX_FREE": {"id": "f9f58140", "name": "INDEX_FREE", "kind": "constant", "type": "{{fa14b3e0}}"}, "INDEX_DELETED": {"id": "f9f58710", "name": "INDEX_DELETED", "kind": "constant", "type": "{{fa14b3e0}}"}}, "functions": {}}, "buffer": {"id": "f93c8580", "description": "A growable buffer / string-builder type\n\nThe buffer is a growable array of bytes, with a null terminator at the end.\nIt can be used as a string builder, or as a string itself. It is also useful\nto hold binary data.\n", "name": "buffer", "kind": "namespace", "structs": {"Buffer": {"id": "fa14cb50", "name": "Buffer", "kind": "struct", "is_templated": false, "fields": [{"name": "data", "type": "&{{fa14b680}}"}, {"name": "size", "type": "{{fa14bb30}}"}, {"name": "capacity", "type": "{{fa14bb30}}"}], "methods": {"str": {"id": "f9425860", "name": "str", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::str", "type": "{{fa14c3c0}}"}}, "putbf": {"id": "f941c970", "name": "putbf", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "buf", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::putbf", "type": "{{fa14ae40}}"}}, "free": {"id": "f9428580", "name": "free", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::free", "type": "{{fa14ae40}}"}}, "putsf": {"id": "f94241c0", "name": "putsf", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::buffer::Buffer::putsf", "type": "{{fa14ae40}}"}}, "new_str": {"id": "f9426660", "name": "new_str", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::new_str", "type": "{{fa14c3c0}}"}}, "hex_dump": {"id": "f9415470", "name": "hex_dump", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::hex_dump", "type": "{{fa14ae40}}"}}, "putb": {"id": "f9419150", "name": "putb", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "buf", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::putb", "type": "{{fa14ae40}}"}}, "from_sized_str": {"id": "f940f780", "name": "from_sized_str", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "s", "type": "{{fa14c3c0}}"}, {"name": "size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::buffer::Buffer::from_sized_str", "type": "{{fa14cb50}}"}}, "make": {"id": "f940b210", "name": "make", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "capacity", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::buffer::Buffer::make", "type": "{{fa14cb50}}"}}, "puts": {"id": "f941df50", "name": "puts", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::buffer::Buffer::puts", "type": "{{fa14ae40}}"}}, "putc": {"id": "f9421240", "name": "putc", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for std::buffer::Buffer::putc", "type": "{{fa14ae40}}"}}, "from_str": {"id": "f940d210", "name": "from_str", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::buffer::Buffer::from_str", "type": "{{fa14cb50}}"}}, "clear": {"id": "f94277b0", "name": "clear", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::buffer::Buffer::clear", "type": "{{fa14ae40}}"}}, "resize_if_necessary": {"id": "f9411d50", "name": "resize_if_necessary", "kind": "method", "parent": "{{fa14cb50}}", "params": [{"name": "this", "type": "&{{fa14cb50}}"}, {"name": "new_size", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::buffer::Buffer::resize_if_necessary", "type": "{{fa14ae40}}"}}}}}, "functions": {}}, "map": {"id": "f8f98760", "description": "A simple hash-map\n\nThis hash map uses closed hashing with linked lists for collision resolution.\nThe hash map will automatically resize itself when the number of items\nexceeds the number of buckets.\n\nSample usage:\n\n    import std::map::Map\n\n    let map = Map<u32, str>::new()\n    map.insert(1, \"one\")\n    map.insert(2, \"two\")\n    for it : map.iter() {\n        println(`{it.key} = {it.value}`)\n    }\n    map.remove(1)\n", "name": "map", "kind": "namespace", "structs": {"Node": {"id": "fa14cc60", "name": "Node", "description": "Linked list node for the hash map\n", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "key", "type": "K"}, {"name": "value", "type": "V"}, {"name": "next", "type": "&{{fa14cc60}}<K, V>"}], "methods": {"free_list": {"id": "f8fe7ff0", "name": "free_list", "description": "Free the linked list starting at this node\n", "kind": "method", "parent": "{{fa14cc60}}", "params": [{"name": "this", "type": "&{{fa14cc60}}"}], "return": {"description": "return for std::map::Node::free_list", "type": "{{fa14ae40}}"}}, "new": {"id": "f8fe3c80", "name": "new", "description": "Creates a new node\n", "kind": "method", "parent": "{{fa14cc60}}", "params": [{"name": "key", "type": "K"}, {"name": "value", "type": "V"}, {"name": "next", "type": "&{{fa14cc60}}<K, V>"}], "return": {"description": "return for std::map::Node::new", "type": "&{{fa14cc60}}<K, V>"}}}}, "Map": {"id": "fa14cd70", "name": "Map", "description": "A Hash-map\n\nPreconditions:\n - `K` type must implement the `hash` method: `K::hash(this): u32`\n - `K` type must implement the `eq` method: `K::eq(this, b: K): bool`\n", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "buckets", "type": "&&{{fa14cc60}}<K, V>"}, {"name": "num_items", "type": "{{fa14bb30}}"}, {"name": "num_buckets", "type": "{{fa14bb30}}"}, {"name": "num_collisions", "type": "{{fa14bb30}}"}], "methods": {"push_keys": {"id": "f90122a0", "name": "push_keys", "description": "Pushes all keys into the given vector\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "vec", "type": "&{{fa14d3d0}}<K>"}], "return": {"description": "return for std::map::Map::push_keys", "type": "{{fa14ae40}}"}}, "at": {"id": "f8ff5500", "name": "at", "description": "Returns the value for the given key, or fails\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::map::Map::at", "type": "V"}}, "free": {"id": "f9015b80", "name": "free", "description": "Frees the map and all its nodes\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::free", "type": "{{fa14ae40}}"}}, "insert": {"id": "f8ffa190", "name": "insert", "description": "Inserts / updates the given key-value pair\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}, {"name": "value", "type": "V"}], "return": {"description": "return for std::map::Map::insert", "type": "{{fa14ae40}}"}}, "get": {"id": "f8ff6fc0", "name": "get", "description": "Returns the value for the given key, or the default value\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}, {"name": "defolt", "type": "V"}], "return": {"description": "return for std::map::Map::get", "type": "V"}}, "extend": {"id": "f90003c0", "name": "extend", "description": "Inserts all key-value pairs from the other map into\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "other", "type": "&{{fa14cd70}}<K, V>"}], "return": {"description": "return for std::map::Map::extend", "type": "{{fa14ae40}}"}}, "remove": {"id": "f9002f10", "name": "remove", "description": "Removes the given key from the map\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::map::Map::remove", "type": "{{fa14ae40}}"}}, "iter_keys": {"id": "f9019b10", "name": "iter_keys", "description": "Returns an iterator over the keys of the map\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::iter_keys", "type": "{{fa14cf90}}<K, V>"}}, "is_empty": {"id": "f90154b0", "name": "is_empty", "description": "Checks if the map is empty\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::is_empty", "type": "{{fa14acb0}}"}}, "contains": {"id": "f8ff8f50", "name": "contains", "description": "Checks if the map contains the given key\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::map::Map::contains", "type": "{{fa14acb0}}"}}, "resize": {"id": "f90081f0", "name": "resize", "description": "Resizes the map to double the number of buckets\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::resize", "type": "{{fa14ae40}}"}}, "hash": {"id": "f8fefa20", "name": "hash", "description": "Hashes a key and returns the bucket index\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::map::Map::hash", "type": "{{fa14bb30}}"}}, "iter_values": {"id": "f8f98950", "name": "iter_values", "description": "Returns an iterator over the values of the map\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::iter_values", "type": "{{fa14d140}}<K, V>"}}, "new": {"id": "f8feb3e0", "name": "new", "description": "Creates a new hash map\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [], "return": {"description": "return for std::map::Map::new", "type": "&{{fa14cd70}}<K, V>"}}, "get_node": {"id": "f8ff1da0", "name": "get_node", "description": "Returns the node with the given key, or null\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}, {"name": "key", "type": "K"}], "return": {"description": "return for std::map::Map::get_node", "type": "&{{fa14cc60}}<K, V>"}}, "iter": {"id": "f90182c0", "name": "iter", "description": "Returns an iterator over the map\n", "kind": "method", "parent": "{{fa14cd70}}", "params": [{"name": "this", "type": "&{{fa14cd70}}"}], "return": {"description": "return for std::map::Map::iter", "type": "{{fa14ce80}}<K, V>"}}}}, "Iterator": {"id": "fa14ce80", "name": "Iterator", "description": "Iterator over the items of a map\n", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "idx", "type": "{{fa14b3e0}}"}, {"name": "node", "type": "&{{fa14cc60}}<K, V>"}, {"name": "map", "type": "&{{fa14cd70}}<K, V>"}], "methods": {"cur": {"id": "f9023a00", "name": "cur", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "this", "type": "&{{fa14ce80}}"}], "return": {"description": "return for std::map::Iterator::cur", "type": "&{{fa14cc60}}<K, V>"}}, "next": {"id": "f9024b30", "name": "next", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "this", "type": "&{{fa14ce80}}"}], "return": {"description": "return for std::map::Iterator::next", "type": "{{fa14ae40}}"}}, "key": {"id": "f901e690", "name": "key", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "this", "type": "&{{fa14ce80}}"}], "return": {"description": "return for std::map::Iterator::key", "type": "K"}}, "has_value": {"id": "f9022d90", "name": "has_value", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "this", "type": "&{{fa14ce80}}"}], "return": {"description": "return for std::map::Iterator::has_value", "type": "{{fa14acb0}}"}}, "value": {"id": "f901f300", "name": "value", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "this", "type": "&{{fa14ce80}}"}], "return": {"description": "return for std::map::Iterator::value", "type": "V"}}, "make": {"id": "f901ff70", "name": "make", "kind": "method", "parent": "{{fa14ce80}}", "params": [{"name": "map", "type": "&{{fa14cd70}}<K, V>"}], "return": {"description": "return for std::map::Iterator::make", "type": "{{fa14ce80}}<K, V>"}}}}, "KeyIterator": {"id": "fa14cf90", "name": "KeyIterator", "description": "Iterator over the keys of a map\n", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "map_iter", "type": "{{fa14ce80}}<K, V>"}], "methods": {"cur": {"id": "f902aaa0", "name": "cur", "kind": "method", "parent": "{{fa14cf90}}", "params": [{"name": "this", "type": "&{{fa14cf90}}"}], "return": {"description": "return for std::map::KeyIterator::cur", "type": "K"}}, "next": {"id": "f902b900", "name": "next", "kind": "method", "parent": "{{fa14cf90}}", "params": [{"name": "this", "type": "&{{fa14cf90}}"}], "return": {"description": "return for std::map::KeyIterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f9029ce0", "name": "has_value", "kind": "method", "parent": "{{fa14cf90}}", "params": [{"name": "this", "type": "&{{fa14cf90}}"}], "return": {"description": "return for std::map::KeyIterator::has_value", "type": "{{fa14acb0}}"}}}}, "ValueIterator": {"id": "fa14d140", "name": "ValueIterator", "description": "Iterator over the values of a map\n", "kind": "struct", "is_templated": true, "template_params": ["K", "V"], "fields": [{"name": "map_iter", "type": "{{fa14ce80}}<K, V>"}], "methods": {"cur": {"id": "f902e0e0", "name": "cur", "kind": "method", "parent": "{{fa14d140}}", "params": [{"name": "this", "type": "&{{fa14d140}}"}], "return": {"description": "return for std::map::ValueIterator::cur", "type": "V"}}, "next": {"id": "f902ef40", "name": "next", "kind": "method", "parent": "{{fa14d140}}", "params": [{"name": "this", "type": "&{{fa14d140}}"}], "return": {"description": "return for std::map::ValueIterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f902d320", "name": "has_value", "kind": "method", "parent": "{{fa14d140}}", "params": [{"name": "this", "type": "&{{fa14d140}}"}], "return": {"description": "return for std::map::ValueIterator::has_value", "type": "{{fa14acb0}}"}}}}}, "functions": {}}, "span": {"id": "f8f76d60", "description": "Represents locations / spans in source code\n", "name": "span", "kind": "namespace", "structs": {"Location": {"id": "fa14d210", "name": "Location", "description": "A location in a source file\n", "kind": "struct", "is_templated": false, "fields": [{"name": "filename", "type": "{{fa14c3c0}}"}, {"name": "line", "type": "{{fa14bb30}}"}, {"name": "col", "type": "{{fa14bb30}}"}, {"name": "index", "type": "{{fa14bb30}}"}], "methods": {"str": {"id": "f8f88780", "name": "str", "kind": "method", "parent": "{{fa14d210}}", "params": [{"name": "this", "type": "&{{fa14d210}}"}], "return": {"description": "return for std::span::Location::str", "type": "{{fa14c3c0}}"}}, "is_before": {"id": "f8f88fb0", "name": "is_before", "description": "Checks if the location is before the other location\n", "kind": "method", "parent": "{{fa14d210}}", "params": [{"name": "this", "type": "&{{fa14d210}}"}, {"name": "other", "type": "{{fa14d210}}"}], "return": {"description": "return for std::span::Location::is_before", "type": "{{fa14acb0}}"}}, "default": {"id": "f8f86610", "name": "default", "kind": "method", "parent": "{{fa14d210}}", "params": [], "return": {"description": "return for std::span::Location::default", "type": "{{fa14d210}}"}}}}, "Span": {"id": "fa14d2e0", "name": "Span", "description": "A span in a source file (start and end location)\n", "kind": "struct", "is_templated": false, "fields": [{"name": "start", "type": "{{fa14d210}}"}, {"name": "end", "type": "{{fa14d210}}"}], "methods": {"str": {"id": "f8f8c9f0", "name": "str", "kind": "method", "parent": "{{fa14d2e0}}", "params": [{"name": "this", "type": "{{fa14d2e0}}"}], "return": {"description": "return for std::span::Span::str", "type": "{{fa14c3c0}}"}}, "contains_loc": {"id": "f8f94080", "name": "contains_loc", "description": "Checks if the location is inside the span\n", "kind": "method", "parent": "{{fa14d2e0}}", "params": [{"name": "this", "type": "{{fa14d2e0}}"}, {"name": "loc", "type": "{{fa14d210}}"}], "return": {"description": "return for std::span::Span::contains_loc", "type": "{{fa14acb0}}"}}, "starts_right_after": {"id": "f8f966b0", "name": "starts_right_after", "description": "Checks if the span starts right after the other span\n", "kind": "method", "parent": "{{fa14d2e0}}", "params": [{"name": "this", "type": "{{fa14d2e0}}"}, {"name": "other", "type": "{{fa14d2e0}}"}], "return": {"description": "return for std::span::Span::starts_right_after", "type": "{{fa14acb0}}"}}, "default": {"id": "f8f8e990", "name": "default", "kind": "method", "parent": "{{fa14d2e0}}", "params": [], "return": {"description": "return for std::span::Span::default", "type": "{{fa14d2e0}}"}}, "join": {"id": "f8f92580", "name": "join", "kind": "method", "parent": "{{fa14d2e0}}", "params": [{"name": "this", "type": "{{fa14d2e0}}"}, {"name": "other", "type": "{{fa14d2e0}}"}], "return": {"description": "return for std::span::Span::join", "type": "{{fa14d2e0}}"}}}}}, "functions": {}}, "traits": {"id": "f8fd44d0", "name": "traits", "kind": "namespace", "namespaces": {"eq": {"id": "f8fde110", "name": "eq", "kind": "namespace", "functions": {}}, "hash": {"id": "f8fd4ce0", "name": "hash", "kind": "namespace", "functions": {}}}}, "vector": {"id": "f8f3fdf0", "description": "A dynamic list of objects\n", "name": "vector", "kind": "namespace", "structs": {"Vector": {"id": "fa14d3d0", "name": "Vector", "description": "A dynamic list of objects\n", "kind": "struct", "is_templated": true, "template_params": ["T"], "fields": [{"name": "data", "type": "&T"}, {"name": "size", "type": "{{fa14bb30}}"}, {"name": "capacity", "type": "{{fa14bb30}}"}], "methods": {"at": {"id": "f8f6b130", "name": "at", "description": "Returns the element at the given index\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}, {"name": "i", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::vector::Vector::at", "type": "T"}}, "free": {"id": "f8f6f5b0", "name": "free", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::free", "type": "{{fa14ae40}}"}}, "extend": {"id": "f8f67590", "name": "extend", "description": "Appends the contents of another vector to this one\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}, {"name": "other", "type": "&{{fa14d3d0}}<T>"}], "return": {"description": "return for std::vector::Vector::extend", "type": "{{fa14ae40}}"}}, "is_empty": {"id": "f8f6d4c0", "name": "is_empty", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::is_empty", "type": "{{fa14acb0}}"}}, "push_front": {"id": "f8f61d00", "name": "push_front", "description": "Pushes an element to the front of the vector\nThis is an O(n) operation\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}, {"name": "value", "type": "T"}], "return": {"description": "return for std::vector::Vector::push_front", "type": "{{fa14ae40}}"}}, "resize": {"id": "f8f5d390", "name": "resize", "description": "Resizes the vector to a new capacity\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}, {"name": "new_capacity", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::vector::Vector::resize", "type": "{{fa14ae40}}"}}, "new": {"id": "f8f593f0", "name": "new", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "capacity", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::vector::Vector::new", "type": "&{{fa14d3d0}}<T>"}}, "pop": {"id": "f8f65c20", "name": "pop", "description": "Pops an element from the end of the vector and returns it\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::pop", "type": "T"}}, "push": {"id": "f8f5f5f0", "name": "push", "description": "Pushes an element to the end of the vector\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}, {"name": "value", "type": "T"}], "return": {"description": "return for std::vector::Vector::push", "type": "{{fa14ae40}}"}}, "clear": {"id": "f8f6c6f0", "name": "clear", "description": "Clears the vector\nThis does not free the memory\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::clear", "type": "{{fa14ae40}}"}}, "back": {"id": "f8f69bc0", "name": "back", "description": "Returns the last element of the vector\n", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::back", "type": "T"}}, "iter": {"id": "f8f6db90", "name": "iter", "kind": "method", "parent": "{{fa14d3d0}}", "params": [{"name": "this", "type": "&{{fa14d3d0}}"}], "return": {"description": "return for std::vector::Vector::iter", "type": "{{fa14d4e0}}<T>"}}}}, "Iterator": {"id": "fa14d4e0", "name": "Iterator", "description": "Iterator for the vector\n", "kind": "struct", "is_templated": true, "template_params": ["T"], "fields": [{"name": "vec", "type": "&{{fa14d3d0}}<T>"}, {"name": "index", "type": "{{fa14bb30}}"}], "methods": {"cur": {"id": "f8f753a0", "name": "cur", "kind": "method", "parent": "{{fa14d4e0}}", "params": [{"name": "this", "type": "&{{fa14d4e0}}"}], "return": {"description": "return for std::vector::Iterator::cur", "type": "T"}}, "next": {"id": "f8f73940", "name": "next", "kind": "method", "parent": "{{fa14d4e0}}", "params": [{"name": "this", "type": "&{{fa14d4e0}}"}], "return": {"description": "return for std::vector::Iterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f8f73270", "name": "has_value", "kind": "method", "parent": "{{fa14d4e0}}", "params": [{"name": "this", "type": "&{{fa14d4e0}}"}], "return": {"description": "return for std::vector::Iterator::has_value", "type": "{{fa14acb0}}"}}, "make": {"id": "f8f71720", "name": "make", "kind": "method", "parent": "{{fa14d4e0}}", "params": [{"name": "vec", "type": "&{{fa14d3d0}}<T>"}], "return": {"description": "return for std::vector::Iterator::make", "type": "{{fa14d4e0}}<T>"}}}}}, "functions": {}}, "json": {"id": "f9f93da0", "description": "JSON parsing and serialization\n\nThis module heavily relies on {{fa14df10}} as the representation of the data.\n", "name": "json", "kind": "namespace", "enums": {"TokenType": {"id": "fa14d920", "name": "TokenType", "kind": "enum", "fields": [{"name": "OpenCurly"}, {"name": "OpenSquare"}, {"name": "CloseCurly"}, {"name": "CloseSquare"}, {"name": "Colon"}, {"name": "Comma"}, {"name": "EOF"}, {"name": "FloatLiteral"}, {"name": "Identifier"}, {"name": "IntLiteral"}, {"name": "StringLiteral"}, {"name": "BEGIN_KEYWORDS"}, {"name": "False"}, {"name": "Null"}, {"name": "True"}], "methods": {"str": {"id": "fa05f8b0", "name": "str", "kind": "method", "parent": "{{fa14d920}}", "params": [{"name": "this", "type": "{{fa14d920}}"}], "return": {"description": "return for std::json::TokenType::str", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa14da10", "name": "dbg", "kind": "method", "parent": "{{fa14d920}}", "params": [{"name": "this", "type": "{{fa14d920}}"}], "return": {"description": "return for std::json::TokenType::dbg", "type": "{{fa14c3c0}}"}}, "from_text": {"id": "fa05dd70", "name": "from_text", "kind": "method", "parent": "{{fa14d920}}", "params": [{"name": "text", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::TokenType::from_text", "type": "{{fa14d920}}"}}}}}, "structs": {"Parser": {"id": "fa14d5f0", "name": "Parser", "description": "JSON Parser\n", "kind": "struct", "is_templated": false, "fields": [{"name": "tokens", "type": "&{{fa14d3d0}}<&{{fa14d810}}>"}, {"name": "curr", "type": "{{fa14bb30}}"}], "methods": {"parse": {"id": "fa007a10", "name": "parse", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}], "return": {"description": "return for std::json::Parser::parse", "type": "&{{fa14df10}}"}}, "consume": {"id": "f9ff09f0", "name": "consume", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}, {"name": "type", "type": "{{fa14d920}}"}], "return": {"description": "return for std::json::Parser::consume", "type": "&{{fa14d810}}"}}, "parse_object": {"id": "f9ff40f0", "name": "parse_object", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}], "return": {"description": "return for std::json::Parser::parse_object", "type": "&{{fa14df10}}"}}, "parse_value": {"id": "f9ffdcc0", "name": "parse_value", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}], "return": {"description": "return for std::json::Parser::parse_value", "type": "&{{fa14df10}}"}}, "token": {"id": "f9fef850", "name": "token", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}], "return": {"description": "return for std::json::Parser::token", "type": "&{{fa14d810}}"}}, "parse_array": {"id": "f9ff97d0", "name": "parse_array", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "this", "type": "&{{fa14d5f0}}"}], "return": {"description": "return for std::json::Parser::parse_array", "type": "&{{fa14df10}}"}}, "make": {"id": "f9feda70", "name": "make", "kind": "method", "parent": "{{fa14d5f0}}", "params": [{"name": "tokens", "type": "&{{fa14d3d0}}<&{{fa14d810}}>"}], "return": {"description": "return for std::json::Parser::make", "type": "{{fa14d5f0}}"}}}}, "Lexer": {"id": "fa14d700", "name": "Lexer", "description": "Lexer for JSON\n", "kind": "struct", "is_templated": false, "fields": [{"name": "source", "type": "{{fa14c3c0}}"}, {"name": "source_len", "type": "{{fa14bb30}}"}, {"name": "i", "type": "{{fa14bb30}}"}, {"name": "loc", "type": "{{fa14d210}}"}, {"name": "tokens", "type": "&{{fa14d3d0}}<&{{fa14d810}}>"}], "methods": {"inc": {"id": "fa031670", "name": "inc", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}], "return": {"description": "return for std::json::Lexer::inc", "type": "{{fa14ae40}}"}}, "cur": {"id": "fa030760", "name": "cur", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}], "return": {"description": "return for std::json::Lexer::cur", "type": "{{fa14ab20}}"}}, "lex": {"id": "fa045ce0", "name": "lex", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}], "return": {"description": "return for std::json::Lexer::lex", "type": "&{{fa14d3d0}}<&{{fa14d810}}>"}}, "lex_numeric_literal": {"id": "fa03f2c0", "name": "lex_numeric_literal", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}], "return": {"description": "return for std::json::Lexer::lex_numeric_literal", "type": "{{fa14ae40}}"}}, "make": {"id": "fa028be0", "name": "make", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "source", "type": "{{fa14c3c0}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::Lexer::make", "type": "{{fa14d700}}"}}, "lex_string_literal": {"id": "fa0388f0", "name": "lex_string_literal", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}], "return": {"description": "return for std::json::Lexer::lex_string_literal", "type": "{{fa14ae40}}"}}, "push": {"id": "fa02c100", "name": "push", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}, {"name": "token", "type": "&{{fa14d810}}"}], "return": {"description": "return for std::json::Lexer::push", "type": "{{fa14ae40}}"}}, "push_type": {"id": "fa02d390", "name": "push_type", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}, {"name": "type", "type": "{{fa14d920}}"}, {"name": "len", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::json::Lexer::push_type", "type": "{{fa14ae40}}"}}, "error": {"id": "fa036330", "name": "error", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::Lexer::error", "type": "{{fa14ae40}}"}}, "peek": {"id": "f9f93f90", "name": "peek", "kind": "method", "parent": "{{fa14d700}}", "params": [{"name": "this", "type": "&{{fa14d700}}"}, {"name": "offset", "type": "{{fa14b3e0}}"}], "return": {"description": "return for std::json::Lexer::peek", "type": "{{fa14ab20}}"}}}}, "Token": {"id": "fa14d810", "name": "Token", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa14d920}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "text", "type": "{{fa14c3c0}}"}], "methods": {"str": {"id": "fa05acc0", "name": "str", "kind": "method", "parent": "{{fa14d810}}", "params": [{"name": "this", "type": "&{{fa14d810}}"}], "return": {"description": "return for std::json::Token::str", "type": "{{fa14c3c0}}"}}, "from_type": {"id": "fa0575a0", "name": "from_type", "kind": "method", "parent": "{{fa14d810}}", "params": [{"name": "type", "type": "{{fa14d920}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for std::json::Token::from_type", "type": "&{{fa14d810}}"}}, "new": {"id": "fa054920", "name": "new", "kind": "method", "parent": "{{fa14d810}}", "params": [{"name": "type", "type": "{{fa14d920}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "text", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::Token::new", "type": "&{{fa14d810}}"}}, "from_ident": {"id": "fa058d70", "name": "from_ident", "kind": "method", "parent": "{{fa14d810}}", "params": [{"name": "text", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for std::json::Token::from_ident", "type": "&{{fa14d810}}"}}}}}, "functions": {"parse": {"id": "fa00a0c0", "name": "parse", "description": "Parse a JSON string into a Value\n", "kind": "function", "params": [{"name": "source", "type": "{{fa14c3c0}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::parse", "type": "&{{fa14df10}}"}}, "parse_from_file": {"id": "fa00c890", "name": "parse_from_file", "description": "Open and parse a JSON file into a Value\n", "kind": "function", "params": [{"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::parse_from_file", "type": "&{{fa14df10}}"}}, "serialize_into": {"id": "fa00ecc0", "name": "serialize_into", "description": "Serialize a Value into JSON, into a given Buffer\n", "kind": "function", "params": [{"name": "val", "type": "&{{fa14df10}}"}, {"name": "sb", "type": "&{{fa14cb50}}"}], "return": {"description": "return for std::json::serialize_into", "type": "{{fa14ae40}}"}}, "serialize": {"id": "fa023390", "name": "serialize", "description": "Serialize a Value into JSON, returning a new {{fa14cb50}}\n", "kind": "function", "params": [{"name": "val", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::json::serialize", "type": "{{fa14cb50}}"}}, "write_to_file": {"id": "fa024c80", "name": "write_to_file", "description": "Serialize a Value into JSON, writing to a file\n", "kind": "function", "params": [{"name": "val", "type": "&{{fa14df10}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::json::write_to_file", "type": "{{fa14ae40}}"}}}}, "value": {"id": "f9f02a40", "description": "A dynamically typed value, used with {{f9f93da0}}/etc\n", "name": "value", "kind": "namespace", "enums": {"ValueType": {"id": "fa14e020", "name": "ValueType", "kind": "enum", "fields": [{"name": "Null"}, {"name": "Bool"}, {"name": "Integer"}, {"name": "String"}, {"name": "List"}, {"name": "Dictionary"}], "methods": {"str": {"id": "fa0625b0", "name": "str", "kind": "method", "parent": "{{fa14e020}}", "params": [{"name": "this", "type": "{{fa14e020}}"}], "return": {"description": "return for std::value::ValueType::str", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa14e110", "name": "dbg", "kind": "method", "parent": "{{fa14e020}}", "params": [{"name": "this", "type": "{{fa14e020}}"}], "return": {"description": "return for std::value::ValueType::dbg", "type": "{{fa14c3c0}}"}}}}}, "structs": {"Value": {"id": "fa14df10", "name": "Value", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa14e020}}"}, {"name": "u", "type": "{{fa14de00}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "methods": {"dbg": {"id": "fa087e90", "name": "dbg", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::dbg", "type": "{{fa14c3c0}}"}}, "new_list": {"id": "fa070650", "name": "new_list", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "vec", "type": "&{{fa14d3d0}}<&{{fa14df10}}>"}], "return": {"description": "return for std::value::Value::new_list", "type": "&{{fa14df10}}"}}, "new_number": {"id": "fa06ec30", "name": "new_number", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "num", "type": "{{fa14b530}}"}], "return": {"description": "return for std::value::Value::new_number", "type": "&{{fa14df10}}"}}, "as_bool": {"id": "fa081580", "name": "as_bool", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::as_bool", "type": "{{fa14acb0}}"}}, "set": {"id": "fa079f60", "name": "set", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "idx", "type": "{{fa14bb30}}"}, {"name": "value", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::set", "type": "{{fa14ae40}}"}}, "new_bool": {"id": "fa06d210", "name": "new_bool", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "bul", "type": "{{fa14acb0}}"}], "return": {"description": "return for std::value::Value::new_bool", "type": "&{{fa14df10}}"}}, "as_list": {"id": "fa084e20", "name": "as_list", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::as_list", "type": "&{{fa14d3d0}}<&{{fa14df10}}>"}}, "at": {"id": "fa078060", "name": "at", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "idx", "type": "{{fa14bb30}}"}], "return": {"description": "return for std::value::Value::at", "type": "&{{fa14df10}}"}}, "free": {"id": "fa089330", "name": "free", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::free", "type": "{{fa14ae40}}"}}, "as_dict": {"id": "fa086590", "name": "as_dict", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::as_dict", "type": "&{{fa14c820}}<{{fa14c3c0}}, &{{fa14df10}}>"}}, "insert": {"id": "fa07f790", "name": "insert", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "key", "type": "{{fa14c3c0}}"}, {"name": "value", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::insert", "type": "{{fa14ae40}}"}}, "new_str": {"id": "fa06b3b0", "name": "new_str", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "s", "type": "{{fa14c3c0}}"}], "return": {"description": "return for std::value::Value::new_str", "type": "&{{fa14df10}}"}}, "get": {"id": "fa07d610", "name": "get", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "key", "type": "{{fa14c3c0}}"}, {"name": "defolt", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::get", "type": "&{{fa14df10}}"}}, "new": {"id": "fa065230", "name": "new", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "type", "type": "{{fa14e020}}"}], "return": {"description": "return for std::value::Value::new", "type": "&{{fa14df10}}"}}, "push": {"id": "fa07bca0", "name": "push", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "value", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::push", "type": "{{fa14ae40}}"}}, "new_dict": {"id": "fa072c10", "name": "new_dict", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "map", "type": "&{{fa14c820}}<{{fa14c3c0}}, &{{fa14df10}}>"}], "return": {"description": "return for std::value::Value::new_dict", "type": "&{{fa14df10}}"}}, "new_str_buf": {"id": "fa069990", "name": "new_str_buf", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "buf", "type": "{{fa14cb50}}"}], "return": {"description": "return for std::value::Value::new_str_buf", "type": "&{{fa14df10}}"}}, "as_str": {"id": "f9f02c30", "name": "as_str", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::as_str", "type": "{{fa14cb50}}"}}, "as_num": {"id": "fa082830", "name": "as_num", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}], "return": {"description": "return for std::value::Value::as_num", "type": "{{fa14b530}}"}}, "is": {"id": "fa077850", "name": "is", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "{{fa14df10}}"}, {"name": "type", "type": "{{fa14e020}}"}], "return": {"description": "return for std::value::Value::is", "type": "{{fa14acb0}}"}}, "ensure": {"id": "fa075360", "name": "ensure", "kind": "method", "parent": "{{fa14df10}}", "params": [{"name": "this", "type": "&{{fa14df10}}"}, {"name": "type", "type": "{{fa14e020}}"}], "return": {"description": "return for std::value::Value::ensure", "type": "{{fa14ae40}}"}}}}}, "unions": {"ValueUnion": {"id": "fa14de00", "name": "ValueUnion", "kind": "union", "is_templated": false, "fields": [{"name": "as_bool", "type": "{{fa14acb0}}"}, {"name": "as_num", "type": "{{fa14b530}}"}, {"name": "as_str", "type": "{{fa14cb50}}"}, {"name": "as_list", "type": "&{{fa14d3d0}}<&{{fa14df10}}>"}, {"name": "as_dict", "type": "&{{fa14c820}}<{{fa14c3c0}}, &{{fa14df10}}>"}], "methods": {}}}, "functions": {}}}}, "compiler": {"id": "f8e86da0", "name": "compiler", "kind": "namespace", "namespaces": {"docgen": {"id": "f9e98670", "name": "docgen", "kind": "namespace", "structs": {"DocGenerator": {"id": "fa14e500", "name": "DocGenerator", "kind": "struct", "is_templated": false, "fields": [], "methods": {"gen_struct": {"id": "fa0d2260", "name": "gen_struct", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for docgen::DocGenerator::gen_struct", "type": "&{{fa14df10}}"}}, "gen_typename_str": {"id": "fa0a4f90", "name": "gen_typename_str", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for docgen::DocGenerator::gen_typename_str", "type": "{{fa14c3c0}}"}}, "gen_builtins": {"id": "fa11c0e0", "name": "gen_builtins", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for docgen::DocGenerator::gen_builtins", "type": "&{{fa14df10}}"}}, "gen_function": {"id": "fa0bec10", "name": "gen_function", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for docgen::DocGenerator::gen_function", "type": "&{{fa14df10}}"}}, "gen_templated_type": {"id": "fa09e6f0", "name": "gen_templated_type", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "base", "type": "&{{fa153e20}}"}, {"name": "args", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}], "return": {"description": "return for docgen::DocGenerator::gen_templated_type", "type": "{{fa14c3c0}}"}}, "gen_enum": {"id": "fa08fdf0", "name": "gen_enum", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}], "return": {"description": "return for docgen::DocGenerator::gen_enum", "type": "&{{fa14df10}}"}}, "gen_builtin": {"id": "fa114c90", "name": "gen_builtin", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for docgen::DocGenerator::gen_builtin", "type": "&{{fa14df10}}"}}, "gen_typename": {"id": "fa0b8ae0", "name": "gen_typename", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for docgen::DocGenerator::gen_typename", "type": "&{{fa14df10}}"}}, "gen_methods": {"id": "fa0ba790", "name": "gen_methods", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for docgen::DocGenerator::gen_methods", "type": "&{{fa14df10}}"}}, "gen_ns": {"id": "fa0e79f0", "name": "gen_ns", "kind": "method", "parent": "{{fa14e500}}", "params": [{"name": "this", "type": "&{{fa14e500}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for docgen::DocGenerator::gen_ns", "type": "&{{fa14df10}}"}}}}}, "functions": {"generate_doc_json": {"id": "fa123bc0", "name": "generate_doc_json", "kind": "function", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "json_path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for docgen::generate_doc_json", "type": "{{fa14ae40}}"}}}}, "parser": {"id": "f920f1d0", "description": "The parser\n", "name": "parser", "kind": "namespace", "structs": {"Parser": {"id": "fa14e610", "name": "Parser", "kind": "struct", "is_templated": false, "fields": [{"name": "tokens", "type": "&{{fa14d3d0}}<&{{fa1528a0}}>"}, {"name": "curr", "type": "{{fa14bb30}}"}, {"name": "curr_func", "type": "&{{fa14ffb0}}"}, {"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "methods": {"parse_postfix": {"id": "f9571720", "name": "parse_postfix", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_postfix", "type": "&{{fa1517c0}}"}}, "parse_term": {"id": "f959ee20", "name": "parse_term", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_term", "type": "&{{fa1517c0}}"}}, "parse_relational": {"id": "f95bea20", "name": "parse_relational", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_relational", "type": "&{{fa1517c0}}"}}, "parse_extern_into_symbol": {"id": "f96650c0", "name": "parse_extern_into_symbol", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "sym", "type": "&{{fa14efa0}}"}], "return": {"description": "return for parser::Parser::parse_extern_into_symbol", "type": "{{fa14ae40}}"}}, "parse_format_string": {"id": "f9505980", "name": "parse_format_string", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_format_string", "type": "&{{fa1517c0}}"}}, "make": {"id": "f94c53b0", "name": "make", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for parser::Parser::make", "type": "{{fa14e610}}"}}, "parse_cast": {"id": "f95997c0", "name": "parse_cast", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_cast", "type": "&{{fa1517c0}}"}}, "parse_bw_and": {"id": "f95b06b0", "name": "parse_bw_and", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_bw_and", "type": "&{{fa1517c0}}"}}, "parse_logical_or": {"id": "f95d1c00", "name": "parse_logical_or", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_logical_or", "type": "&{{fa1517c0}}"}}, "parse_shift": {"id": "f95a9c40", "name": "parse_shift", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_shift", "type": "&{{fa1517c0}}"}}, "parse_compiler_option": {"id": "f96b9a60", "name": "parse_compiler_option", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_compiler_option", "type": "{{fa14ae40}}"}}, "parse_toplevel": {"id": "f96f66b0", "name": "parse_toplevel", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::Parser::parse_toplevel", "type": "{{fa14ae40}}"}}, "load_import_path": {"id": "f96dbad0", "name": "load_import_path", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "import_stmt", "type": "&{{fa1517c0}}"}], "return": {"description": "return for parser::Parser::load_import_path", "type": "{{fa14acb0}}"}}, "consume_end_of_statement": {"id": "f94dbf60", "name": "consume_end_of_statement", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::consume_end_of_statement", "type": "{{fa14ae40}}"}}, "parse_type": {"id": "f94dd870", "name": "parse_type", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_type", "type": "&{{fa153e20}}"}}, "unhandled_type": {"id": "f94cdcd0", "name": "unhandled_type", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "func", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::Parser::unhandled_type", "type": "{{fa14ae40}}"}}, "parse_struct": {"id": "f9686250", "name": "parse_struct", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_struct", "type": "&{{fa14fd10}}"}}, "parse_atom": {"id": "f9555520", "name": "parse_atom", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_atom", "type": "&{{fa1517c0}}"}}, "parse_namespace_until": {"id": "f96a5190", "name": "parse_namespace_until", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_namespace_until", "type": "{{fa14ae40}}"}}, "load_file": {"id": "f96e2430", "name": "load_file", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::Parser::load_file", "type": "{{fa14ae40}}"}}, "error_msg": {"id": "f94ca3e0", "name": "error_msg", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::Parser::error_msg", "type": "&{{fa152e80}}"}}, "parse_enum": {"id": "f9697a70", "name": "parse_enum", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_enum", "type": "&{{fa14ff10}}"}}, "parse_match": {"id": "f952c110", "name": "parse_match", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_match", "type": "&{{fa1517c0}}"}}, "parse_expression": {"id": "f95d6950", "name": "parse_expression", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_expression", "type": "&{{fa1517c0}}"}}, "token": {"id": "f94cea80", "name": "token", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::token", "type": "&{{fa1528a0}}"}}, "parse_prefix": {"id": "f9582e00", "name": "parse_prefix", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_prefix", "type": "&{{fa1517c0}}"}}, "parse_import_path": {"id": "f9669910", "name": "parse_import_path", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_import_path", "type": "&{{fa14d3d0}}<&{{fa150770}}>"}}, "parse_bw_xor": {"id": "f95b5280", "name": "parse_bw_xor", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_bw_xor", "type": "&{{fa1517c0}}"}}, "parse_if": {"id": "f95dd2c0", "name": "parse_if", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_if", "type": "&{{fa1517c0}}"}}, "parse_for_each": {"id": "f95e4430", "name": "parse_for_each", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "start_span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for parser::Parser::parse_for_each", "type": "&{{fa1517c0}}"}}, "parse_block": {"id": "f9630f10", "name": "parse_block", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_block", "type": "&{{fa1517c0}}"}}, "consume_newline_or": {"id": "f94d5500", "name": "consume_newline_or", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::consume_newline_or", "type": "{{fa14ae40}}"}}, "consume": {"id": "f94d8c70", "name": "consume", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::consume", "type": "&{{fa1528a0}}"}}, "parse_additive": {"id": "f95a48f0", "name": "parse_additive", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_additive", "type": "&{{fa1517c0}}"}}, "parse_statement": {"id": "f960cbf0", "name": "parse_statement", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_statement", "type": "&{{fa1517c0}}"}}, "parse_literal_suffix_type": {"id": "f920f3c0", "name": "parse_literal_suffix_type", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "suffix", "type": "&{{fa1528a0}}"}], "return": {"description": "return for parser::Parser::parse_literal_suffix_type", "type": "&{{fa153e20}}"}}, "find_and_import_stdlib": {"id": "f96ea370", "name": "find_and_import_stdlib", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::find_and_import_stdlib", "type": "{{fa14ae40}}"}}, "parse_function": {"id": "f963e710", "name": "parse_function", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_function", "type": "&{{fa14ffb0}}"}}, "parse_call": {"id": "f953d770", "name": "parse_call", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "callee", "type": "&{{fa1517c0}}"}], "return": {"description": "return for parser::Parser::parse_call", "type": "&{{fa1517c0}}"}}, "load_import_path_from_base": {"id": "f96c7010", "name": "load_import_path_from_base", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "parts", "type": "&{{fa14d3d0}}<&{{fa150770}}>"}, {"name": "base", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for parser::Parser::load_import_path_from_base", "type": "{{fa14acb0}}"}}, "parse_global_value": {"id": "f95489f0", "name": "parse_global_value", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "is_const", "type": "{{fa14acb0}}"}], "return": {"description": "return for parser::Parser::parse_global_value", "type": "&{{fa1517c0}}"}}, "parse_import": {"id": "f967c1d0", "name": "parse_import", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_import", "type": "&{{fa1517c0}}"}}, "parse_for": {"id": "f9602790", "name": "parse_for", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_for", "type": "&{{fa1517c0}}"}}, "parse_bw_or": {"id": "f95b9e50", "name": "parse_bw_or", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_bw_or", "type": "&{{fa1517c0}}"}}, "parse_logical_and": {"id": "f95cd010", "name": "parse_logical_and", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "end_type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::parse_logical_and", "type": "&{{fa1517c0}}"}}, "consume_if": {"id": "f94d2980", "name": "consume_if", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::consume_if", "type": "{{fa14acb0}}"}}, "token_is": {"id": "f94d1580", "name": "token_is", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "type", "type": "{{fa1529b0}}"}], "return": {"description": "return for parser::Parser::token_is", "type": "{{fa14acb0}}"}}, "parse_template_params": {"id": "f9635fc0", "name": "parse_template_params", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "out_span", "type": "&{{fa14d2e0}}"}], "return": {"description": "return for parser::Parser::parse_template_params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}}, "parse_scoped_identifier": {"id": "f94f3a60", "name": "parse_scoped_identifier", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}], "return": {"description": "return for parser::Parser::parse_scoped_identifier", "type": "&{{fa1517c0}}"}}, "error": {"id": "f94cc610", "name": "error", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "err", "type": "&{{fa152e80}}"}], "return": {"description": "return for parser::Parser::error", "type": "&{{fa152e80}}"}}, "peek": {"id": "f94c7a70", "name": "peek", "kind": "method", "parent": "{{fa14e610}}", "params": [{"name": "this", "type": "&{{fa14e610}}"}, {"name": "off", "type": "{{fa14b3e0}}"}], "return": {"description": "return for parser::Parser::peek", "type": "&{{fa1528a0}}"}}}}}, "functions": {"dirname": {"id": "f94c3230", "name": "dirname", "kind": "function", "extern": "dirname", "params": [{"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::dirname", "type": "{{fa14c3c0}}"}}, "basename": {"id": "f94c3860", "name": "basename", "kind": "function", "extern": "basename", "params": [{"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for parser::basename", "type": "{{fa14c3c0}}"}}, "couldnt_find_stdlib": {"id": "f96e8080", "name": "couldnt_find_stdlib", "kind": "function", "params": [], "return": {"description": "return for parser::couldnt_find_stdlib", "type": "{{fa14ae40}}"}}}}, "utils": {"id": "f949bfd0", "description": "Miscellaneous utilities\n", "name": "utils", "kind": "namespace", "structs": {"DIR": {"id": "fa14e720", "name": "DIR", "kind": "struct", "is_templated": false, "extern": "DIR", "fields": [], "methods": {}}}, "functions": {"strsep": {"id": "f94ade30", "name": "strsep", "kind": "function", "extern": "strsep", "params": [{"name": "s", "type": "&{{fa14c3c0}}"}, {"name": "delim", "type": "{{fa14c3c0}}"}], "return": {"description": "return for utils::strsep", "type": "{{fa14c3c0}}"}}, "edit_distance": {"id": "f94ae7a0", "name": "edit_distance", "kind": "function", "params": [{"name": "str1", "type": "{{fa14c3c0}}"}, {"name": "str2", "type": "{{fa14c3c0}}"}], "return": {"description": "return for utils::edit_distance", "type": "{{fa14bb30}}"}}, "find_word_suggestion": {"id": "f94ba770", "name": "find_word_suggestion", "kind": "function", "params": [{"name": "s", "type": "{{fa14c3c0}}"}, {"name": "options", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}], "return": {"description": "return for utils::find_word_suggestion", "type": "{{fa14c3c0}}"}}, "opendir": {"id": "f94c0670", "name": "opendir", "kind": "function", "extern": "opendir", "params": [{"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for utils::opendir", "type": "&{{fa14e720}}"}}, "closedir": {"id": "f94c0db0", "name": "closedir", "kind": "function", "extern": "closedir", "params": [{"name": "dir", "type": "&{{fa14e720}}"}], "return": {"description": "return for utils::closedir", "type": "{{fa14ae40}}"}}, "directory_exists": {"id": "f94c14f0", "name": "directory_exists", "kind": "function", "params": [{"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for utils::directory_exists", "type": "{{fa14acb0}}"}}}}, "passes": {"id": "f9705220", "name": "passes", "kind": "namespace", "namespaces": {"register_types": {"id": "f97555f0", "description": "Register all types in the program\n", "name": "register_types", "kind": "namespace", "structs": {"RegisterTypes": {"id": "fa14e830", "name": "RegisterTypes", "kind": "struct", "is_templated": false, "fields": [{"name": "o", "type": "&{{fa14e940}}"}], "methods": {"register_enum": {"id": "f97eacf0", "name": "register_enum", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_enum", "type": "{{fa14ae40}}"}}, "register_namespace": {"id": "f97f8300", "name": "register_namespace", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_namespace", "type": "{{fa14ae40}}"}}, "register_base_type": {"id": "f97ffc10", "name": "register_base_type", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "base", "type": "{{fa153ec0}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_base_type", "type": "{{fa14ae40}}"}}, "add_dbg_method_for_enum": {"id": "f97ef9f0", "name": "add_dbg_method_for_enum", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::add_dbg_method_for_enum", "type": "{{fa14ae40}}"}}, "run": {"id": "f9811b60", "name": "run", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::run", "type": "{{fa14ae40}}"}}, "register_struct": {"id": "f97e7730", "name": "register_struct", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_struct", "type": "{{fa14ae40}}"}}, "register_alias": {"id": "f98045d0", "name": "register_alias", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "orig", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_alias", "type": "{{fa14ae40}}"}}, "register_builtin_types": {"id": "f9809920", "name": "register_builtin_types", "kind": "method", "parent": "{{fa14e830}}", "params": [{"name": "this", "type": "&{{fa14e830}}"}], "return": {"description": "return for passes::register_types::RegisterTypes::register_builtin_types", "type": "{{fa14ae40}}"}}}}}, "functions": {}}, "generic_pass": {"id": "f97790c0", "description": "Common helper functions for passes\n", "name": "generic_pass", "kind": "namespace", "structs": {"GenericPass": {"id": "fa14e940", "name": "GenericPass", "kind": "struct", "is_templated": false, "fields": [{"name": "scope_stack", "type": "&{{fa14d3d0}}<&{{fa14f0b0}}>"}, {"name": "namespace_stack", "type": "&{{fa14d3d0}}<&{{fa14f6b0}}>"}, {"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "error_type", "type": "&{{fa153e20}}"}], "methods": {"import_all_from_namespace": {"id": "f97d3270", "name": "import_all_from_namespace", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::import_all_from_namespace", "type": "{{fa14ae40}}"}}, "import_all_from_symbol": {"id": "f97dcb70", "name": "import_all_from_symbol", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "sym", "type": "&{{fa14efa0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::import_all_from_symbol", "type": "{{fa14ae40}}"}}, "lookup_in_symbol": {"id": "f97bc450", "name": "lookup_in_symbol", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "error", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::lookup_in_symbol", "type": "&{{fa14efa0}}"}}, "pop_namespace": {"id": "f97b0870", "name": "pop_namespace", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::pop_namespace", "type": "&{{fa14f6b0}}"}}, "push_namespace": {"id": "f97adbe0", "name": "push_namespace", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::push_namespace", "type": "{{fa14ae40}}"}}, "ns": {"id": "f97b3d80", "name": "ns", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::ns", "type": "&{{fa14f6b0}}"}}, "new": {"id": "f97a9250", "name": "new", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::new", "type": "&{{fa14e940}}"}}, "insert_into_scope_checked": {"id": "f97b6fb0", "name": "insert_into_scope_checked", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "item", "type": "&{{fa14efa0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::insert_into_scope_checked", "type": "{{fa14ae40}}"}}, "error": {"id": "f97b58d0", "name": "error", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "err", "type": "&{{fa152e80}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::error", "type": "&{{fa152e80}}"}}, "push_scope": {"id": "f97ac930", "name": "push_scope", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}, {"name": "scope", "type": "&{{fa14f0b0}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::push_scope", "type": "{{fa14ae40}}"}}, "pop_scope": {"id": "f97aee90", "name": "pop_scope", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::pop_scope", "type": "&{{fa14f0b0}}"}}, "scope": {"id": "f97b2220", "name": "scope", "kind": "method", "parent": "{{fa14e940}}", "params": [{"name": "this", "type": "&{{fa14e940}}"}], "return": {"description": "return for passes::generic_pass::GenericPass::scope", "type": "&{{fa14f0b0}}"}}}}}, "functions": {}}, "mod": {"id": "f974e780", "name": "mod", "kind": "namespace", "functions": {"run_typecheck_passes": {"id": "f9e93e40", "name": "run_typecheck_passes", "description": "Typechecks the program\n", "kind": "function", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::mod::run_typecheck_passes", "type": "{{fa14ae40}}"}}, "run_codegen_passes": {"id": "f9e95e90", "name": "run_codegen_passes", "description": "Generates code for the program and returns it\n", "kind": "function", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::mod::run_codegen_passes", "type": "{{fa14c3c0}}"}}}}, "code_generator": {"id": "f9c58860", "description": "Generate C code from the AST\n", "name": "code_generator", "kind": "namespace", "structs": {"CodeGenerator": {"id": "fa14ea50", "name": "CodeGenerator", "kind": "struct", "is_templated": false, "fields": [{"name": "o", "type": "&{{fa14e940}}"}, {"name": "out", "type": "{{fa14cb50}}"}, {"name": "indent", "type": "{{fa14bb30}}"}, {"name": "yield_vars", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}], "methods": {"gen_struct": {"id": "f9e76200", "name": "gen_struct", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_struct", "type": "{{fa14ae40}}"}}, "gen_match_case_body": {"id": "f9de07d0", "name": "gen_match_case_body", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_match_case_body", "type": "{{fa14ae40}}"}}, "gen_format_string_variadic": {"id": "f9d62d10", "name": "gen_format_string_variadic", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "newline_after", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_format_string_variadic", "type": "{{fa14ae40}}"}}, "gen_expression": {"id": "f9c58a50", "name": "gen_expression", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_expression", "type": "{{fa14ae40}}"}}, "gen_enum": {"id": "f9e701e0", "name": "gen_enum", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_enum", "type": "{{fa14ae40}}"}}, "gen_function_decl": {"id": "f9e55040", "name": "gen_function_decl", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_function_decl", "type": "{{fa14ae40}}"}}, "get_type_name_string": {"id": "f9e4ae50", "name": "get_type_name_string", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "type", "type": "&{{fa153e20}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "is_func_def", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::get_type_name_string", "type": "{{fa14c3c0}}"}}, "make": {"id": "f9e8fe20", "name": "make", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::make", "type": "{{fa14ea50}}"}}, "gen_functions": {"id": "f9e57440", "name": "gen_functions", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_functions", "type": "{{fa14ae40}}"}}, "gen_var_declaration": {"id": "f9ddd5f0", "name": "gen_var_declaration", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_var_declaration", "type": "{{fa14ae40}}"}}, "gen_type": {"id": "f9e4f7a0", "name": "gen_type", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_type", "type": "{{fa14ae40}}"}}, "gen_enum_types": {"id": "f9e62ff0", "name": "gen_enum_types", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_enum_types", "type": "{{fa14ae40}}"}}, "gen_statement": {"id": "f9e072c0", "name": "gen_statement", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_statement", "type": "{{fa14ae40}}"}}, "gen_defers_upto": {"id": "f9e01f40", "name": "gen_defers_upto", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "end_scope", "type": "&{{fa14f0b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_defers_upto", "type": "{{fa14ae40}}"}}, "gen_structs_and_typedefs": {"id": "f9e7c520", "name": "gen_structs_and_typedefs", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_structs_and_typedefs", "type": "{{fa14ae40}}"}}, "gen_function_decls": {"id": "f9e5c5c0", "name": "gen_function_decls", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_function_decls", "type": "{{fa14ae40}}"}}, "gen_global_variables": {"id": "f9d80c30", "name": "gen_global_variables", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_global_variables", "type": "{{fa14ae40}}"}}, "gen_format_string_part": {"id": "f9d5cc20", "name": "gen_format_string_part", "description": "Generate all the escape sequences in format string part\n", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "part", "type": "{{fa14c3c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_format_string_part", "type": "{{fa14ae40}}"}}, "helper_gen_type": {"id": "f9e2e320", "name": "helper_gen_type", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "top", "type": "&{{fa153e20}}"}, {"name": "cur", "type": "&{{fa153e20}}"}, {"name": "acc", "type": "{{fa14c3c0}}"}, {"name": "is_func_def", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::helper_gen_type", "type": "{{fa14c3c0}}"}}, "gen_constants": {"id": "f9d7cfe0", "name": "gen_constants", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_constants", "type": "{{fa14ae40}}"}}, "gen_control_body": {"id": "f9d85bd0", "name": "gen_control_body", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_control_body", "type": "{{fa14ae40}}"}}, "gen_internal_print": {"id": "f9d54d80", "name": "gen_internal_print", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_internal_print", "type": "{{fa14ae40}}"}}, "gen_block": {"id": "f9e272f0", "name": "gen_block", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "with_braces", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_block", "type": "{{fa14ae40}}"}}, "gen_type_and_name": {"id": "f9e4d7d0", "name": "gen_type_and_name", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "type", "type": "&{{fa153e20}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_type_and_name", "type": "{{fa14ae40}}"}}, "gen_match": {"id": "f9dea210", "name": "gen_match", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_match", "type": "{{fa14ae40}}"}}, "gen_yield_expression": {"id": "f9d75e60", "name": "gen_yield_expression", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "expr", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_yield_expression", "type": "{{fa14ae40}}"}}, "gen_constant": {"id": "f9d78ef0", "name": "gen_constant", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_constant", "type": "{{fa14ae40}}"}}, "gen_indent": {"id": "f9d458f0", "name": "gen_indent", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_indent", "type": "{{fa14ae40}}"}}, "run": {"id": "f9e92890", "name": "run", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::run", "type": "{{fa14c3c0}}"}}, "generate": {"id": "f9e85030", "name": "generate", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::generate", "type": "{{fa14c3c0}}"}}, "scope": {"id": "f9d4a440", "name": "scope", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::scope", "type": "&{{fa14f0b0}}"}}, "gen_match_string": {"id": "f9de98a0", "name": "gen_match_string", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_match_string", "type": "{{fa14ae40}}"}}, "gen_in_yield_context": {"id": "f9d8a910", "name": "gen_in_yield_context", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_in_yield_context", "type": "{{fa14ae40}}"}}, "get_op": {"id": "f9d4e620", "name": "get_op", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "type", "type": "{{fa1518d0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::get_op", "type": "{{fa14c3c0}}"}}, "gen_function": {"id": "f9e50e00", "name": "gen_function", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_function", "type": "{{fa14ae40}}"}}, "gen_debug_info": {"id": "f9d4b310", "name": "gen_debug_info", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "force", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_debug_info", "type": "{{fa14ae40}}"}}, "gen_enum_dbg_method": {"id": "f9e66bd0", "name": "gen_enum_dbg_method", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_enum_dbg_method", "type": "{{fa14ae40}}"}}, "error": {"id": "f9d49000", "name": "error", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "err", "type": "&{{fa152e80}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::error", "type": "&{{fa152e80}}"}}, "gen_constructor": {"id": "f9d91e40", "name": "gen_constructor", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_constructor", "type": "{{fa14ae40}}"}}, "gen_format_string": {"id": "f9d73a30", "name": "gen_format_string", "kind": "method", "parent": "{{fa14ea50}}", "params": [{"name": "this", "type": "&{{fa14ea50}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::code_generator::CodeGenerator::gen_format_string", "type": "{{fa14ae40}}"}}}}}, "functions": {}}, "typechecker": {"id": "f9836270", "description": "Resolve and check types in the AST\n\nThis pass actually goes through the AST and checks the types of all the nodes.\nAny remaining unresolved types should be resolved after this\n", "name": "typechecker", "kind": "namespace", "structs": {"TypeChecker": {"id": "fa14eb60", "name": "TypeChecker", "kind": "struct", "is_templated": false, "fields": [{"name": "o", "type": "&{{fa14e940}}"}, {"name": "unchecked_functions", "type": "&{{fa14d3d0}}<&{{fa14ffb0}}>"}], "methods": {"resolve_templated_struct_methods": {"id": "f99e6510", "name": "resolve_templated_struct_methods", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "old", "type": "&{{fa14fd10}}"}, {"name": "cur", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_templated_struct_methods", "type": "{{fa14ae40}}"}}, "check_post_import": {"id": "f9c10430", "name": "check_post_import", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_post_import", "type": "{{fa14ae40}}"}}, "pre_check_namespace": {"id": "f9c229b0", "name": "pre_check_namespace", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::pre_check_namespace", "type": "{{fa14ae40}}"}}, "check_for": {"id": "f9b471e0", "name": "check_for", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_for", "type": "{{fa14ae40}}"}}, "pre_check_constants": {"id": "f9c1dcf0", "name": "pre_check_constants", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::pre_check_constants", "type": "{{fa14ae40}}"}}, "check_expression": {"id": "f9aaa400", "name": "check_expression", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_expression", "type": "&{{fa153e20}}"}}, "check_binary_op": {"id": "f9a69a20", "name": "check_binary_op", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "lhs", "type": "&{{fa153e20}}"}, {"name": "rhs", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_binary_op", "type": "&{{fa153e20}}"}}, "check_const_expression": {"id": "f9bbd360", "name": "check_const_expression", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_const_expression", "type": "&{{fa153e20}}"}}, "check_internal_print": {"id": "f9a37200", "name": "check_internal_print", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_internal_print", "type": "&{{fa153e20}}"}}, "check_block": {"id": "f9a23430", "name": "check_block", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_expr", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_block", "type": "{{fa14ae40}}"}}, "check_statement": {"id": "f9b505c0", "name": "check_statement", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_statement", "type": "{{fa14ae40}}"}}, "check_method_call": {"id": "f9a2c2e0", "name": "check_method_call", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "method", "type": "&{{fa14ffb0}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_method_call", "type": "{{fa14ae40}}"}}, "get_base_type": {"id": "f99c6730", "name": "get_base_type", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "base", "type": "{{fa153ec0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::get_base_type", "type": "&{{fa153e20}}"}}, "call_dbg_on_enum_value": {"id": "f9afa040", "name": "call_dbg_on_enum_value", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node_ptr", "type": "&&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::call_dbg_on_enum_value", "type": "&{{fa153e20}}"}}, "check_namespace": {"id": "f9b93910", "name": "check_namespace", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_namespace", "type": "{{fa14ae40}}"}}, "check_function_declaration": {"id": "f9c06870", "name": "check_function_declaration", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_function_declaration", "type": "{{fa14ae40}}"}}, "loosely_resolve_templated_struct": {"id": "f9bfc120", "name": "loosely_resolve_templated_struct", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::loosely_resolve_templated_struct", "type": "{{fa14ae40}}"}}, "handle_namespace_imports": {"id": "f9b86f00", "name": "handle_namespace_imports", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::handle_namespace_imports", "type": "{{fa14ae40}}"}}, "check_while": {"id": "f9b40460", "name": "check_while", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_while", "type": "{{fa14ae40}}"}}, "pre_check_function": {"id": "f9bec540", "name": "pre_check_function", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::pre_check_function", "type": "{{fa14ae40}}"}}, "check_call_args": {"id": "f9a42290", "name": "check_call_args", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_call_args", "type": "{{fa14ae40}}"}}, "check_match_for_enum": {"id": "f9b00f10", "name": "check_match_for_enum", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_expr", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_match_for_enum", "type": "{{fa14ae40}}"}}, "get_type_by_name": {"id": "f99c7fa0", "name": "get_type_by_name", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::get_type_by_name", "type": "&{{fa153e20}}"}}, "resolve_doc_links": {"id": "f9ba2e10", "name": "resolve_doc_links", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "doc", "type": "{{fa14c3c0}}"}, {"name": "obj_span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_doc_links", "type": "{{fa14c3c0}}"}}, "run": {"id": "f9c27470", "name": "run", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::run", "type": "{{fa14ae40}}"}}, "check_member": {"id": "f9836460", "name": "check_member", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_being_called", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_member", "type": "&{{fa153e20}}"}}, "check_global_variable": {"id": "f9b8c2f0", "name": "check_global_variable", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_global_variable", "type": "{{fa14ae40}}"}}, "scope": {"id": "f99c5860", "name": "scope", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::scope", "type": "&{{fa14f0b0}}"}}, "check_match": {"id": "f9b15f20", "name": "check_match", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_expr", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_match", "type": "{{fa14ae40}}"}}, "resolve_templated_struct": {"id": "f99f1060", "name": "resolve_templated_struct", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_templated_struct", "type": "&{{fa14efa0}}"}}, "check_if": {"id": "f9b2a570", "name": "check_if", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_expr", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_if", "type": "{{fa14ae40}}"}}, "check_constructor": {"id": "f9a3f560", "name": "check_constructor", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_constructor", "type": "&{{fa153e20}}"}}, "check_expression_statement": {"id": "f9b33ed0", "name": "check_expression_statement", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}, {"name": "is_expr", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_expression_statement", "type": "{{fa14ae40}}"}}, "handle_import_path_base": {"id": "f9bd14b0", "name": "handle_import_path_base", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "parts", "type": "&{{fa14d3d0}}<&{{fa150770}}>"}, {"name": "base", "type": "&{{fa14efa0}}"}, {"name": "alias", "type": "{{fa14c3c0}}"}, {"name": "start_idx", "type": "{{fa14b3e0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::handle_import_path_base", "type": "{{fa14ae40}}"}}, "check_format_string": {"id": "f9a91570", "name": "check_format_string", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_format_string", "type": "&{{fa153e20}}"}}, "resolve_type": {"id": "f99c9810", "name": "resolve_type", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "old", "type": "&{{fa153e20}}"}, {"name": "allow_incomplete", "type": "{{fa14acb0}}"}, {"name": "error", "type": "{{fa14acb0}}"}, {"name": "resolve_templates", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_type", "type": "&{{fa153e20}}"}}, "handle_import_statement": {"id": "f9bdfab0", "name": "handle_import_statement", "description": "Insert all the imported items into the current scope.\n", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::handle_import_statement", "type": "{{fa14ae40}}"}}, "check_expression_helper": {"id": "f9aad280", "name": "check_expression_helper", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_expression_helper", "type": "&{{fa153e20}}"}}, "resolve_struct": {"id": "f9bff960", "name": "resolve_struct", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_struct", "type": "{{fa14ae40}}"}}, "pre_check_globals": {"id": "f9c18cd0", "name": "pre_check_globals", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "is_const", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::pre_check_globals", "type": "{{fa14ae40}}"}}, "resolve_scoped_identifier": {"id": "f9a08110", "name": "resolve_scoped_identifier", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "error", "type": "{{fa14acb0}}"}, {"name": "hint", "type": "&{{fa153e20}}"}, {"name": "resolve_templates", "type": "{{fa14acb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::resolve_scoped_identifier", "type": "&{{fa14efa0}}"}}, "error": {"id": "f99c4420", "name": "error", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "err", "type": "&{{fa152e80}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::error", "type": "&{{fa152e80}}"}}, "check_pointer_arith": {"id": "f9a63360", "name": "check_pointer_arith", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}, {"name": "_lhs", "type": "&{{fa153e20}}"}, {"name": "_rhs", "type": "&{{fa153e20}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_pointer_arith", "type": "&{{fa153e20}}"}}, "check_call": {"id": "f9a531f0", "name": "check_call", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "node", "type": "&{{fa1517c0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_call", "type": "&{{fa153e20}}"}}, "check_function": {"id": "f9b787d0", "name": "check_function", "kind": "method", "parent": "{{fa14eb60}}", "params": [{"name": "this", "type": "&{{fa14eb60}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for passes::typechecker::TypeChecker::check_function", "type": "{{fa14ae40}}"}}}}}, "functions": {}}, "namespace_dump": {"id": "f9813f80", "description": "Dump the namespace tree for debug\n", "name": "namespace_dump", "kind": "namespace", "structs": {"NamespaceDump": {"id": "fa14ec70", "name": "NamespaceDump", "kind": "struct", "is_templated": false, "fields": [{"name": "indent", "type": "{{fa14bb30}}"}], "methods": {"run": {"id": "f9832880", "name": "run", "kind": "method", "parent": "{{fa14ec70}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::namespace_dump::NamespaceDump::run", "type": "{{fa14ae40}}"}}, "print_namespace": {"id": "f9822a00", "name": "print_namespace", "kind": "method", "parent": "{{fa14ec70}}", "params": [{"name": "this", "type": "&{{fa14ec70}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::namespace_dump::NamespaceDump::print_namespace", "type": "{{fa14ae40}}"}}, "print_indent": {"id": "f9820f60", "name": "print_indent", "kind": "method", "parent": "{{fa14ec70}}", "params": [{"name": "this", "type": "&{{fa14ec70}}"}], "return": {"description": "return for passes::namespace_dump::NamespaceDump::print_indent", "type": "{{fa14ae40}}"}}}}}, "functions": {}}, "reorder_structs": {"id": "f9c2d060", "description": "Topologically sort structs\n\nThis is needed because in C structs need to be declared before they are used\nin other structs. The ordered structs are stored in `program.ordered_structs`\n", "name": "reorder_structs", "kind": "namespace", "structs": {"ReorderStructs": {"id": "fa14ed80", "name": "ReorderStructs", "kind": "struct", "is_templated": false, "fields": [{"name": "o", "type": "&{{fa14e940}}"}, {"name": "all_structs", "type": "&{{fa14d3d0}}<&{{fa14fd10}}>"}, {"name": "done", "type": "&{{fa14cd70}}<{{fa14c3c0}}, &{{fa14fd10}}>"}], "methods": {"new": {"id": "f9c42b90", "name": "new", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::new", "type": "&{{fa14ed80}}"}}, "free": {"id": "f9c46c10", "name": "free", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "this", "type": "&{{fa14ed80}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::free", "type": "{{fa14ae40}}"}}, "run": {"id": "f9c563f0", "name": "run", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::run", "type": "{{fa14ae40}}"}}, "dfs": {"id": "f9c4ef30", "name": "dfs", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "this", "type": "&{{fa14ed80}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::dfs", "type": "{{fa14ae40}}"}}, "collect_all_structs": {"id": "f9c489c0", "name": "collect_all_structs", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "this", "type": "&{{fa14ed80}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::collect_all_structs", "type": "{{fa14ae40}}"}}, "reorder_structs": {"id": "f9c542f0", "name": "reorder_structs", "kind": "method", "parent": "{{fa14ed80}}", "params": [{"name": "this", "type": "&{{fa14ed80}}"}], "return": {"description": "return for passes::reorder_structs::ReorderStructs::reorder_structs", "type": "{{fa14ae40}}"}}}}}, "functions": {}}}}, "ast": {"id": "f8f06270", "name": "ast", "kind": "namespace", "namespaces": {"scopes": {"id": "f9030940", "description": "Contains Symbol/Scope and related types\n", "name": "scopes", "kind": "namespace", "enums": {"SymbolType": {"id": "fa14f1c0", "name": "SymbolType", "kind": "enum", "fields": [{"name": "Function"}, {"name": "Structure"}, {"name": "Enum"}, {"name": "TypeDef"}, {"name": "Namespace"}, {"name": "Variable"}, {"name": "Constant"}], "methods": {"dbg": {"id": "fa14f2b0", "name": "dbg", "kind": "method", "parent": "{{fa14f1c0}}", "params": [{"name": "this", "type": "{{fa14f1c0}}"}], "return": {"description": "return for ast::scopes::SymbolType::dbg", "type": "{{fa14c3c0}}"}}}}}, "structs": {"Symbol": {"id": "fa14efa0", "name": "Symbol", "kind": "struct", "is_templated": false, "fields": [{"name": "name", "type": "{{fa14c3c0}}", "description": "Name in the scope it was defined in\n"}, {"name": "display", "type": "{{fa14c3c0}}", "description": "Fully qualified display name, including namespaces\n"}, {"name": "out_name", "type": "{{fa14c3c0}}", "description": "Name used in the output C code\n"}, {"name": "span", "type": "{{fa14d2e0}}", "description": "Span of the declaration\n"}, {"name": "ns", "type": "&{{fa14f6b0}}", "description": "Namespace it was defined in\n"}, {"name": "comment", "type": "{{fa14c3c0}}", "description": "Comment attached to the declaration\n"}, {"name": "type", "type": "{{fa14f1c0}}"}, {"name": "u", "type": "{{fa14ee90}}"}, {"name": "is_extern", "type": "{{fa14acb0}}"}], "methods": {"from_local_variable": {"id": "f91a2e40", "name": "from_local_variable", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "var", "type": "&{{fa14f9e0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::scopes::Symbol::from_local_variable", "type": "&{{fa14efa0}}"}}, "new": {"id": "f9193e50", "name": "new", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "type", "type": "{{fa14f1c0}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "display", "type": "{{fa14c3c0}}"}, {"name": "out_name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::scopes::Symbol::new", "type": "&{{fa14efa0}}"}}, "remove_alias": {"id": "f91a6400", "name": "remove_alias", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "this", "type": "&{{fa14efa0}}"}], "return": {"description": "return for ast::scopes::Symbol::remove_alias", "type": "&{{fa14efa0}}"}}, "join_display": {"id": "f9198450", "name": "join_display", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "a", "type": "{{fa14c3c0}}"}, {"name": "b", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::scopes::Symbol::join_display", "type": "{{fa14c3c0}}"}}, "join_out_name": {"id": "f919a530", "name": "join_out_name", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "a", "type": "{{fa14c3c0}}"}, {"name": "b", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::scopes::Symbol::join_out_name", "type": "{{fa14c3c0}}"}}, "new_with_parent": {"id": "f919c600", "name": "new_with_parent", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "type", "type": "{{fa14f1c0}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "parent", "type": "&{{fa14efa0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::scopes::Symbol::new_with_parent", "type": "&{{fa14efa0}}"}}, "update_parent": {"id": "f91a01c0", "name": "update_parent", "kind": "method", "parent": "{{fa14efa0}}", "params": [{"name": "this", "type": "&{{fa14efa0}}"}, {"name": "parent", "type": "&{{fa14efa0}}"}], "return": {"description": "return for ast::scopes::Symbol::update_parent", "type": "{{fa14ae40}}"}}}}, "Scope": {"id": "fa14f0b0", "name": "Scope", "kind": "struct", "is_templated": false, "fields": [{"name": "items", "type": "&{{fa14cd70}}<{{fa14c3c0}}, &{{fa14efa0}}>"}, {"name": "defers", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}, {"name": "loop_count", "type": "{{fa14bb30}}"}, {"name": "can_yield", "type": "{{fa14acb0}}"}, {"name": "cur_func", "type": "&{{fa14ffb0}}"}, {"name": "parent", "type": "&{{fa14f0b0}}"}], "methods": {"lookup_local": {"id": "f91b2110", "name": "lookup_local", "kind": "method", "parent": "{{fa14f0b0}}", "params": [{"name": "this", "type": "&{{fa14f0b0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::scopes::Scope::lookup_local", "type": "&{{fa14efa0}}"}}, "new": {"id": "f91aa440", "name": "new", "kind": "method", "parent": "{{fa14f0b0}}", "params": [{"name": "parent", "type": "&{{fa14f0b0}}"}], "return": {"description": "return for ast::scopes::Scope::new", "type": "&{{fa14f0b0}}"}}, "insert": {"id": "f91b36a0", "name": "insert", "kind": "method", "parent": "{{fa14f0b0}}", "params": [{"name": "this", "type": "&{{fa14f0b0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "symbol", "type": "&{{fa14efa0}}"}], "return": {"description": "return for ast::scopes::Scope::insert", "type": "{{fa14ae40}}"}}, "lookup_recursive": {"id": "f91af430", "name": "lookup_recursive", "kind": "method", "parent": "{{fa14f0b0}}", "params": [{"name": "this", "type": "&{{fa14f0b0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::scopes::Scope::lookup_recursive", "type": "&{{fa14efa0}}"}}}}}, "unions": {"SymbolUnion": {"id": "fa14ee90", "name": "SymbolUnion", "kind": "union", "is_templated": false, "fields": [{"name": "func", "type": "&{{fa14ffb0}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}, {"name": "type_def", "type": "&{{fa153e20}}"}, {"name": "var", "type": "&{{fa14f9e0}}"}], "methods": {}}}, "functions": {}}, "program": {"id": "f8f06970", "description": "Contains the Program/Namespace types\n", "name": "program", "kind": "namespace", "structs": {"Namespace": {"id": "fa14f6b0", "name": "Namespace", "kind": "struct", "is_templated": false, "fields": [{"name": "parent", "type": "&{{fa14f6b0}}"}, {"name": "functions", "type": "&{{fa14d3d0}}<&{{fa14ffb0}}>"}, {"name": "structs", "type": "&{{fa14d3d0}}<&{{fa14fd10}}>"}, {"name": "enums", "type": "&{{fa14d3d0}}<&{{fa14ff10}}>"}, {"name": "constants", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}, {"name": "variables", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}, {"name": "imports", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}, {"name": "namespaces", "type": "&{{fa14cd70}}<{{fa14c3c0}}, &{{fa14f6b0}}>"}, {"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "scope", "type": "&{{fa14f0b0}}"}, {"name": "path", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "is_a_file", "type": "{{fa14acb0}}"}, {"name": "always_add_to_scope", "type": "{{fa14acb0}}"}, {"name": "is_top_level", "type": "{{fa14acb0}}"}], "methods": {"find_importable_symbol": {"id": "f97132c0", "name": "find_importable_symbol", "kind": "method", "parent": "{{fa14f6b0}}", "params": [{"name": "this", "type": "&{{fa14f6b0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::program::Namespace::find_importable_symbol", "type": "&{{fa14efa0}}"}}, "new": {"id": "f970a300", "name": "new", "kind": "method", "parent": "{{fa14f6b0}}", "params": [{"name": "parent", "type": "&{{fa14f6b0}}"}, {"name": "path", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::program::Namespace::new", "type": "&{{fa14f6b0}}"}}}}, "Program": {"id": "fa14f7c0", "name": "Program", "kind": "struct", "is_templated": false, "fields": [{"name": "global", "type": "&{{fa14f6b0}}"}, {"name": "project_root", "type": "&{{fa14f6b0}}"}, {"name": "ordered_structs", "type": "&{{fa14d3d0}}<&{{fa14fd10}}>", "description": "Structs in topologically sorted order. Filled by {{f9c2d060}}\n"}, {"name": "errors", "type": "&{{fa14d3d0}}<&{{fa152e80}}>"}, {"name": "error_level", "type": "{{fa14bb30}}"}, {"name": "c_includes", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}, {"name": "c_flags", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}, {"name": "c_embeds", "type": "&{{fa14cd70}}<{{fa14c3c0}}, {{fa14c3c0}}>", "description": "Mapping from file name to file contents\n"}, {"name": "gen_debug_info", "type": "{{fa14acb0}}"}, {"name": "sources", "type": "&{{fa14cd70}}<{{fa14c3c0}}, {{fa14c3c0}}>"}], "methods": {"iter_namespaces": {"id": "f9744520", "name": "iter_namespaces", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for ast::program::Program::iter_namespaces", "type": "{{fa14f8d0}}"}}, "get_source_text": {"id": "f972dca0", "name": "get_source_text", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::program::Program::get_source_text", "type": "{{fa14c3c0}}"}}, "get_type_by_name": {"id": "f9740a30", "name": "get_type_by_name", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::program::Program::get_type_by_name", "type": "&{{fa153e20}}"}}, "new": {"id": "f9723240", "name": "new", "kind": "method", "parent": "{{fa14f7c0}}", "params": [], "return": {"description": "return for ast::program::Program::new", "type": "&{{fa14f7c0}}"}}, "get_struct_deep_copy": {"id": "f9737b90", "name": "get_struct_deep_copy", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "old", "type": "&{{fa14fd10}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for ast::program::Program::get_struct_deep_copy", "type": "&{{fa14fd10}}"}}, "exit_with_errors": {"id": "f972c520", "name": "exit_with_errors", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}], "return": {"description": "return for ast::program::Program::exit_with_errors", "type": "{{fa14ae40}}"}}, "error": {"id": "f97313f0", "name": "error", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "err", "type": "&{{fa152e80}}"}], "return": {"description": "return for ast::program::Program::error", "type": "&{{fa152e80}}"}}, "get_base_type": {"id": "f973cd10", "name": "get_base_type", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "base", "type": "{{fa153ec0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::program::Program::get_base_type", "type": "&{{fa153e20}}"}}, "get_function_deep_copy": {"id": "f9732a10", "name": "get_function_deep_copy", "kind": "method", "parent": "{{fa14f7c0}}", "params": [{"name": "this", "type": "&{{fa14f7c0}}"}, {"name": "old", "type": "&{{fa14ffb0}}"}, {"name": "ns", "type": "&{{fa14f6b0}}"}], "return": {"description": "return for ast::program::Program::get_function_deep_copy", "type": "&{{fa14ffb0}}"}}}}, "NSIterator": {"id": "fa14f8d0", "name": "NSIterator", "kind": "struct", "is_templated": false, "fields": [{"name": "stack", "type": "&{{fa14d3d0}}<&{{fa14f6b0}}>"}, {"name": "curr", "type": "&{{fa14f6b0}}"}], "methods": {"cur": {"id": "f974d370", "name": "cur", "kind": "method", "parent": "{{fa14f8d0}}", "params": [{"name": "this", "type": "&{{fa14f8d0}}"}], "return": {"description": "return for ast::program::NSIterator::cur", "type": "&{{fa14f6b0}}"}}, "next": {"id": "f9748cd0", "name": "next", "kind": "method", "parent": "{{fa14f8d0}}", "params": [{"name": "this", "type": "&{{fa14f8d0}}"}], "return": {"description": "return for ast::program::NSIterator::next", "type": "{{fa14ae40}}"}}, "has_value": {"id": "f9747a90", "name": "has_value", "kind": "method", "parent": "{{fa14f8d0}}", "params": [{"name": "this", "type": "&{{fa14f8d0}}"}], "return": {"description": "return for ast::program::NSIterator::has_value", "type": "{{fa14acb0}}"}}}}}, "functions": {}}, "nodes": {"id": "f904f910", "description": "Contains the core AST types\n", "name": "nodes", "kind": "namespace", "enums": {"ASTType": {"id": "fa1518d0", "name": "ASTType", "kind": "enum", "fields": [{"name": "Assert"}, {"name": "Block"}, {"name": "BoolLiteral"}, {"name": "Break"}, {"name": "Call"}, {"name": "Constant"}, {"name": "Continue"}, {"name": "Error"}, {"name": "Identifier"}, {"name": "If"}, {"name": "Import"}, {"name": "IntLiteral"}, {"name": "Member"}, {"name": "NSLookup"}, {"name": "Return"}, {"name": "Yield"}, {"name": "StringLiteral"}, {"name": "SizeOf"}, {"name": "VarDeclaration"}, {"name": "While"}, {"name": "For"}, {"name": "CharLiteral"}, {"name": "FloatLiteral"}, {"name": "FormatStringLiteral"}, {"name": "Cast"}, {"name": "Null"}, {"name": "MethodCall"}, {"name": "Match"}, {"name": "Index"}, {"name": "Defer"}, {"name": "Specialization"}, {"name": "PreIncrement"}, {"name": "PreDecrement"}, {"name": "PostIncrement"}, {"name": "PostDecrement"}, {"name": "Address"}, {"name": "Dereference"}, {"name": "Negate"}, {"name": "Not"}, {"name": "IsNotNull", "description": "ptr? operator\n"}, {"name": "And"}, {"name": "Assignment"}, {"name": "BitwiseAnd"}, {"name": "BitwiseNot"}, {"name": "BitwiseOr"}, {"name": "BitwiseXor"}, {"name": "Divide"}, {"name": "DivideEquals"}, {"name": "Equals"}, {"name": "GreaterThan"}, {"name": "GreaterThanEquals"}, {"name": "LeftShift"}, {"name": "LessThan"}, {"name": "LessThanEquals"}, {"name": "Minus"}, {"name": "MinusEquals"}, {"name": "Modulus"}, {"name": "Multiply"}, {"name": "MultiplyEquals"}, {"name": "NotEquals"}, {"name": "Or"}, {"name": "Plus"}, {"name": "PlusEquals"}, {"name": "RightShift"}], "methods": {"dbg": {"id": "fa1519c0", "name": "dbg", "kind": "method", "parent": "{{fa1518d0}}", "params": [{"name": "this", "type": "{{fa1518d0}}"}], "return": {"description": "return for ast::nodes::ASTType::dbg", "type": "{{fa14c3c0}}"}}, "from_token": {"id": "f91415f0", "name": "from_token", "kind": "method", "parent": "{{fa1518d0}}", "params": [{"name": "type", "type": "{{fa1529b0}}"}], "return": {"description": "return for ast::nodes::ASTType::from_token", "type": "{{fa1518d0}}"}}}}, "ImportPartType": {"id": "fa151db0", "name": "ImportPartType", "kind": "enum", "fields": [{"name": "Single"}, {"name": "Multiple"}, {"name": "Wildcard"}], "methods": {"dbg": {"id": "fa151ea0", "name": "dbg", "kind": "method", "parent": "{{fa151db0}}", "params": [{"name": "this", "type": "{{fa151db0}}"}], "return": {"description": "return for ast::nodes::ImportPartType::dbg", "type": "{{fa14c3c0}}"}}}}, "ImportType": {"id": "fa1522a0", "name": "ImportType", "kind": "enum", "fields": [{"name": "GlobalNamespace", "description": "Import from a global / library: `import foo`\n"}, {"name": "ProjectNamespace", "description": "Import from a project namespace: `import @foo`\n"}, {"name": "ParentNamespace", "description": "Import from current / parent dir: `import ..foo`\n"}, {"name": "CurrentScope", "description": "Import from a local namespace: `import ::foo`\n"}], "methods": {"dbg": {"id": "fa152390", "name": "dbg", "kind": "method", "parent": "{{fa1522a0}}", "params": [{"name": "this", "type": "{{fa1522a0}}"}], "return": {"description": "return for ast::nodes::ImportType::dbg", "type": "{{fa14c3c0}}"}}}}}, "structs": {"Variable": {"id": "fa14f9e0", "name": "Variable", "kind": "struct", "is_templated": false, "fields": [{"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "type", "type": "&{{fa153e20}}"}, {"name": "default_value", "type": "&{{fa1517c0}}"}], "methods": {"new": {"id": "f9148ba0", "name": "new", "kind": "method", "parent": "{{fa14f9e0}}", "params": [{"name": "type", "type": "&{{fa153e20}}"}], "return": {"description": "return for ast::nodes::Variable::new", "type": "&{{fa14f9e0}}"}}}}, "VarDeclaration": {"id": "fa14faf0", "name": "VarDeclaration", "kind": "struct", "is_templated": false, "fields": [{"name": "var", "type": "&{{fa14f9e0}}"}, {"name": "init", "type": "&{{fa1517c0}}"}], "methods": {}}, "TemplateInstance": {"id": "fa14fc00", "name": "TemplateInstance", "kind": "struct", "is_templated": false, "fields": [{"name": "params", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}, {"name": "parent", "type": "&{{fa14efa0}}"}, {"name": "resolved", "type": "&{{fa14efa0}}"}], "methods": {"new": {"id": "f914c3e0", "name": "new", "kind": "method", "parent": "{{fa14fc00}}", "params": [{"name": "params", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}, {"name": "parent", "type": "&{{fa14efa0}}"}, {"name": "resolved", "type": "&{{fa14efa0}}"}], "return": {"description": "return for ast::nodes::TemplateInstance::new", "type": "&{{fa14fc00}}"}}}}, "Structure": {"id": "fa14fd10", "name": "Structure", "kind": "struct", "is_templated": false, "fields": [{"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "fields", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}, {"name": "type", "type": "&{{fa153e20}}"}, {"name": "is_union", "type": "{{fa14acb0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "is_templated", "type": "{{fa14acb0}}"}, {"name": "template_params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}, {"name": "template_instances", "type": "&{{fa14d3d0}}<&{{fa14fc00}}>"}], "methods": {"find_template_instance": {"id": "f9156df0", "name": "find_template_instance", "kind": "method", "parent": "{{fa14fd10}}", "params": [{"name": "this", "type": "&{{fa14fd10}}"}, {"name": "template_args", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}], "return": {"description": "return for ast::nodes::Structure::find_template_instance", "type": "&{{fa14efa0}}"}}, "new": {"id": "f9151cc0", "name": "new", "kind": "method", "parent": "{{fa14fd10}}", "params": [], "return": {"description": "return for ast::nodes::Structure::new", "type": "&{{fa14fd10}}"}}, "get_field": {"id": "f9154030", "name": "get_field", "kind": "method", "parent": "{{fa14fd10}}", "params": [{"name": "this", "type": "&{{fa14fd10}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::nodes::Structure::get_field", "type": "&{{fa14f9e0}}"}}}}, "Enum": {"id": "fa14ff10", "name": "Enum", "kind": "struct", "is_templated": false, "fields": [{"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "fields", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}, {"name": "type", "type": "&{{fa153e20}}"}], "methods": {"new": {"id": "f915e680", "name": "new", "kind": "method", "parent": "{{fa14ff10}}", "params": [], "return": {"description": "return for ast::nodes::Enum::new", "type": "&{{fa14ff10}}"}}, "get_field": {"id": "f91609f0", "name": "get_field", "kind": "method", "parent": "{{fa14ff10}}", "params": [{"name": "this", "type": "&{{fa14ff10}}"}, {"name": "name", "type": "{{fa14c3c0}}"}], "return": {"description": "return for ast::nodes::Enum::get_field", "type": "&{{fa14f9e0}}"}}}}, "Function": {"id": "fa14ffb0", "name": "Function", "kind": "struct", "is_templated": false, "fields": [{"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}, {"name": "return_type", "type": "&{{fa153e20}}"}, {"name": "body", "type": "&{{fa1517c0}}"}, {"name": "exits", "type": "{{fa14acb0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "scope", "type": "&{{fa14f0b0}}"}, {"name": "type", "type": "&{{fa153e20}}"}, {"name": "checked", "type": "{{fa14acb0}}"}, {"name": "is_method", "type": "{{fa14acb0}}"}, {"name": "is_static", "type": "{{fa14acb0}}"}, {"name": "parent_type", "type": "&{{fa153e20}}"}], "methods": {"new": {"id": "f9165ce0", "name": "new", "kind": "method", "parent": "{{fa14ffb0}}", "params": [], "return": {"description": "return for ast::nodes::Function::new", "type": "&{{fa14ffb0}}"}}}}, "Block": {"id": "fa150080", "name": "Block", "kind": "struct", "is_templated": false, "fields": [{"name": "statements", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}, {"name": "scope", "type": "&{{fa14f0b0}}"}], "methods": {}}, "Identifier": {"id": "fa150170", "name": "Identifier", "kind": "struct", "is_templated": false, "fields": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "var", "type": "&{{fa14f9e0}}"}, {"name": "is_function", "type": "{{fa14acb0}}"}, {"name": "func", "type": "&{{fa14ffb0}}"}], "methods": {}}, "Argument": {"id": "fa150430", "name": "Argument", "kind": "struct", "is_templated": false, "fields": [{"name": "expr", "type": "&{{fa1517c0}}"}, {"name": "label", "type": "{{fa14c3c0}}"}, {"name": "label_span", "type": "{{fa14d2e0}}"}], "methods": {"new": {"id": "f916a220", "name": "new", "kind": "method", "parent": "{{fa150430}}", "params": [{"name": "label", "type": "{{fa14c3c0}}"}, {"name": "label_span", "type": "{{fa14d2e0}}"}, {"name": "expr", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::Argument::new", "type": "&{{fa150430}}"}}}}, "FuncCall": {"id": "fa150500", "name": "FuncCall", "kind": "struct", "is_templated": false, "fields": [{"name": "callee", "type": "&{{fa1517c0}}"}, {"name": "args", "type": "&{{fa14d3d0}}<&{{fa150430}}>"}, {"name": "func", "type": "&{{fa14ffb0}}"}, {"name": "is_constructor", "type": "{{fa14acb0}}"}, {"name": "is_function_pointer", "type": "{{fa14acb0}}"}, {"name": "added_method_arg", "type": "{{fa14acb0}}"}], "methods": {}}, "ImportPartSingle": {"id": "fa1505d0", "name": "ImportPartSingle", "kind": "struct", "is_templated": false, "fields": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "alias", "type": "{{fa14c3c0}}"}, {"name": "alias_span", "type": "{{fa14d2e0}}"}], "methods": {}}, "ImportPart": {"id": "fa150770", "name": "ImportPart", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa151db0}}"}, {"name": "u", "type": "{{fa1506a0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "methods": {"new": {"id": "f9170c40", "name": "new", "kind": "method", "parent": "{{fa150770}}", "params": [{"name": "type", "type": "{{fa151db0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::nodes::ImportPart::new", "type": "&{{fa150770}}"}}}}, "Import": {"id": "fa150860", "name": "Import", "kind": "struct", "is_templated": false, "fields": [{"name": "parts", "type": "&{{fa14d3d0}}<&{{fa150770}}>"}, {"name": "type", "type": "{{fa1522a0}}"}, {"name": "parent_count", "type": "{{fa14bb30}}"}], "methods": {}}, "NumLiteral": {"id": "fa150970", "name": "NumLiteral", "kind": "struct", "is_templated": false, "fields": [{"name": "text", "type": "{{fa14c3c0}}"}, {"name": "suffix", "type": "&{{fa153e20}}"}], "methods": {}}, "Binary": {"id": "fa150a80", "name": "Binary", "kind": "struct", "is_templated": false, "fields": [{"name": "lhs", "type": "&{{fa1517c0}}"}, {"name": "rhs", "type": "&{{fa1517c0}}"}], "methods": {}}, "NSLookup": {"id": "fa150ec0", "name": "NSLookup", "kind": "struct", "is_templated": false, "fields": [{"name": "lhs", "type": "&{{fa1517c0}}"}, {"name": "rhs_name", "type": "{{fa14c3c0}}"}, {"name": "rhs_span", "type": "{{fa14d2e0}}"}], "methods": {}}, "Member": {"id": "fa150f60", "name": "Member", "kind": "struct", "is_templated": false, "fields": [{"name": "lhs", "type": "&{{fa1517c0}}"}, {"name": "rhs_name", "type": "{{fa14c3c0}}"}, {"name": "rhs_span", "type": "{{fa14d2e0}}"}, {"name": "is_pointer", "type": "{{fa14acb0}}"}], "methods": {}}, "Assertion": {"id": "fa151000", "name": "Assertion", "kind": "struct", "is_templated": false, "fields": [{"name": "expr", "type": "&{{fa1517c0}}"}, {"name": "msg", "type": "&{{fa1517c0}}"}], "methods": {}}, "IfStatement": {"id": "fa1510a0", "name": "IfStatement", "kind": "struct", "is_templated": false, "fields": [{"name": "cond", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}, {"name": "els", "type": "&{{fa1517c0}}"}], "methods": {}}, "Loop": {"id": "fa151170", "name": "Loop", "kind": "struct", "is_templated": false, "fields": [{"name": "init", "type": "&{{fa1517c0}}"}, {"name": "cond", "type": "&{{fa1517c0}}"}, {"name": "step", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}], "methods": {}}, "Cast": {"id": "fa151240", "name": "Cast", "kind": "struct", "is_templated": false, "fields": [{"name": "lhs", "type": "&{{fa1517c0}}"}, {"name": "to", "type": "&{{fa153e20}}"}], "methods": {}}, "FormatString": {"id": "fa151310", "name": "FormatString", "kind": "struct", "is_templated": false, "fields": [{"name": "parts", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}, {"name": "specs", "type": "&{{fa14d3d0}}<{{fa14c3c0}}>"}, {"name": "exprs", "type": "&{{fa14d3d0}}<&{{fa1517c0}}>"}], "methods": {}}, "MatchCase": {"id": "fa1513e0", "name": "MatchCase", "kind": "struct", "is_templated": false, "fields": [{"name": "cond", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}], "methods": {"new": {"id": "f917b230", "name": "new", "kind": "method", "parent": "{{fa1513e0}}", "params": [{"name": "cond", "type": "&{{fa1517c0}}"}, {"name": "body", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::MatchCase::new", "type": "&{{fa1513e0}}"}}}}, "Match": {"id": "fa1514b0", "name": "Match", "kind": "struct", "is_templated": false, "fields": [{"name": "expr", "type": "&{{fa1517c0}}"}, {"name": "cases", "type": "&{{fa14d3d0}}<&{{fa1513e0}}>"}, {"name": "defolt", "type": "&{{fa1517c0}}"}, {"name": "defolt_span", "type": "{{fa14d2e0}}"}], "methods": {}}, "Specialization": {"id": "fa1515a0", "name": "Specialization", "kind": "struct", "is_templated": false, "fields": [{"name": "base", "type": "&{{fa1517c0}}"}, {"name": "template_args", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}], "methods": {}}, "AST": {"id": "fa1517c0", "name": "AST", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa1518d0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "u", "type": "{{fa1516b0}}"}, {"name": "etype", "type": "&{{fa153e20}}"}, {"name": "resolved_symbol", "type": "&{{fa14efa0}}"}, {"name": "returns", "type": "{{fa14acb0}}"}], "methods": {"new": {"id": "f9183bc0", "name": "new", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "type", "type": "{{fa1518d0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for ast::nodes::AST::new", "type": "&{{fa1517c0}}"}}, "new_unop": {"id": "f9186310", "name": "new_unop", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "type", "type": "{{fa1518d0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "expr", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::AST::new_unop", "type": "&{{fa1517c0}}"}}, "is_identifier": {"id": "f918b760", "name": "is_identifier", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "this", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::AST::is_identifier", "type": "{{fa14acb0}}"}}, "symbol": {"id": "f918cd70", "name": "symbol", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "this", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::AST::symbol", "type": "&{{fa14efa0}}"}}, "new_binop": {"id": "f91884d0", "name": "new_binop", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "type", "type": "{{fa1518d0}}"}, {"name": "lhs", "type": "&{{fa1517c0}}"}, {"name": "rhs", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::AST::new_binop", "type": "&{{fa1517c0}}"}}, "is_lvalue": {"id": "f904fb00", "name": "is_lvalue", "kind": "method", "parent": "{{fa1517c0}}", "params": [{"name": "this", "type": "&{{fa1517c0}}"}], "return": {"description": "return for ast::nodes::AST::is_lvalue", "type": "{{fa14acb0}}"}}}}}, "unions": {"ImportPartUnion": {"id": "fa1506a0", "name": "ImportPartUnion", "kind": "union", "is_templated": false, "fields": [{"name": "single", "type": "{{fa1505d0}}"}, {"name": "paths", "type": "&{{fa14d3d0}}<&{{fa14d3d0}}<&{{fa150770}}>>"}], "methods": {}}, "ASTUnion": {"id": "fa1516b0", "name": "ASTUnion", "kind": "union", "is_templated": false, "fields": [{"name": "assertion", "type": "{{fa151000}}"}, {"name": "binary", "type": "{{fa150a80}}"}, {"name": "block", "type": "{{fa150080}}"}, {"name": "bool_literal", "type": "{{fa14acb0}}"}, {"name": "call", "type": "{{fa150500}}"}, {"name": "cast", "type": "{{fa151240}}"}, {"name": "ident", "type": "{{fa150170}}"}, {"name": "if_stmt", "type": "{{fa1510a0}}"}, {"name": "import_path", "type": "{{fa150860}}"}, {"name": "lookup", "type": "{{fa150ec0}}"}, {"name": "loop", "type": "{{fa151170}}"}, {"name": "member", "type": "{{fa150f60}}"}, {"name": "num_literal", "type": "{{fa150970}}"}, {"name": "string_literal", "type": "{{fa14c3c0}}"}, {"name": "char_literal", "type": "{{fa14c3c0}}"}, {"name": "unary", "type": "&{{fa1517c0}}"}, {"name": "var_decl", "type": "{{fa14faf0}}"}, {"name": "fmt_str", "type": "{{fa151310}}"}, {"name": "size_of_type", "type": "&{{fa153e20}}"}, {"name": "match_stmt", "type": "{{fa1514b0}}"}, {"name": "spec", "type": "{{fa1515a0}}"}], "methods": {}}}, "functions": {}}}}, "lexer": {"id": "f939cdc0", "description": "The lexer\n", "name": "lexer", "kind": "namespace", "structs": {"Lexer": {"id": "fa152790", "name": "Lexer", "kind": "struct", "is_templated": false, "fields": [{"name": "source", "type": "{{fa14c3c0}}"}, {"name": "source_len", "type": "{{fa14bb30}}"}, {"name": "i", "type": "{{fa14bb30}}"}, {"name": "loc", "type": "{{fa14d210}}"}, {"name": "seen_newline", "type": "{{fa14acb0}}"}, {"name": "tokens", "type": "&{{fa14d3d0}}<&{{fa1528a0}}>"}, {"name": "errors", "type": "&{{fa14d3d0}}<&{{fa152e80}}>"}, {"name": "in_comment", "type": "{{fa14acb0}}"}, {"name": "comment", "type": "{{fa14cb50}}"}, {"name": "comment_start", "type": "{{fa14d210}}"}], "methods": {"inc": {"id": "f943b510", "name": "inc", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::inc", "type": "{{fa14ae40}}"}}, "cur": {"id": "f943a600", "name": "cur", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::cur", "type": "{{fa14ab20}}"}}, "lex": {"id": "f946b560", "name": "lex", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex", "type": "&{{fa14d3d0}}<&{{fa1528a0}}>"}}, "lex_numeric_literal": {"id": "f945f5e0", "name": "lex_numeric_literal", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex_numeric_literal", "type": "{{fa14ae40}}"}}, "make": {"id": "f942e0f0", "name": "make", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "source", "type": "{{fa14c3c0}}"}, {"name": "filename", "type": "{{fa14c3c0}}"}], "return": {"description": "return for lexer::Lexer::make", "type": "{{fa152790}}"}}, "lex_char_literal": {"id": "f9440680", "name": "lex_char_literal", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex_char_literal", "type": "{{fa14ae40}}"}}, "lex_comment": {"id": "f9465720", "name": "lex_comment", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex_comment", "type": "{{fa14ae40}}"}}, "lex_string_literal": {"id": "f9447090", "name": "lex_string_literal", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}, {"name": "has_seen_f", "type": "{{fa14acb0}}"}], "return": {"description": "return for lexer::Lexer::lex_string_literal", "type": "{{fa14ae40}}"}}, "push": {"id": "f9433690", "name": "push", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}, {"name": "token", "type": "&{{fa1528a0}}"}], "return": {"description": "return for lexer::Lexer::push", "type": "{{fa14ae40}}"}}, "push_type": {"id": "f9437230", "name": "push_type", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}, {"name": "type", "type": "{{fa1529b0}}"}, {"name": "len", "type": "{{fa14bb30}}"}], "return": {"description": "return for lexer::Lexer::push_type", "type": "{{fa14ae40}}"}}, "lex_int_literal_different_base": {"id": "f9450a60", "name": "lex_int_literal_different_base", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex_int_literal_different_base", "type": "&{{fa1528a0}}"}}, "lex_numeric_literal_helper": {"id": "f94578f0", "name": "lex_numeric_literal_helper", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}], "return": {"description": "return for lexer::Lexer::lex_numeric_literal_helper", "type": "&{{fa1528a0}}"}}, "peek": {"id": "f943e850", "name": "peek", "kind": "method", "parent": "{{fa152790}}", "params": [{"name": "this", "type": "&{{fa152790}}"}, {"name": "offset", "type": "{{fa14b3e0}}"}], "return": {"description": "return for lexer::Lexer::peek", "type": "{{fa14ab20}}"}}}}}, "functions": {"is_hex_digit": {"id": "f9429b80", "name": "is_hex_digit", "kind": "function", "params": [{"name": "c", "type": "{{fa14ab20}}"}], "return": {"description": "return for lexer::is_hex_digit", "type": "{{fa14acb0}}"}}}}, "tokens": {"id": "f9093720", "description": "Definitions for Tokens\n", "name": "tokens", "kind": "namespace", "enums": {"TokenType": {"id": "fa1529b0", "name": "TokenType", "kind": "enum", "fields": [{"name": "AtSign"}, {"name": "Ampersand"}, {"name": "Backtick"}, {"name": "Caret"}, {"name": "CharLiteral"}, {"name": "CloseCurly"}, {"name": "CloseParen"}, {"name": "CloseSquare"}, {"name": "Colon"}, {"name": "ColonColon"}, {"name": "Comma"}, {"name": "Dot"}, {"name": "EOF"}, {"name": "Equals"}, {"name": "EqualEquals"}, {"name": "Exclamation"}, {"name": "FatArrow"}, {"name": "FloatLiteral"}, {"name": "FormatStringLiteral"}, {"name": "GreaterThan"}, {"name": "GreaterThanEquals"}, {"name": "Identifier"}, {"name": "IntLiteral"}, {"name": "LessThan"}, {"name": "LessThanEquals"}, {"name": "Line"}, {"name": "Minus"}, {"name": "MinusEquals"}, {"name": "MinusMinus"}, {"name": "NotEquals"}, {"name": "Newline"}, {"name": "OpenCurly"}, {"name": "OpenParen"}, {"name": "OpenSquare"}, {"name": "Percent"}, {"name": "Plus"}, {"name": "PlusEquals"}, {"name": "PlusPlus"}, {"name": "Question"}, {"name": "Semicolon"}, {"name": "Slash"}, {"name": "SlashEquals"}, {"name": "Star"}, {"name": "StarEquals"}, {"name": "StringLiteral"}, {"name": "Tilde"}, {"name": "BEGIN_KEYWORDS"}, {"name": "And"}, {"name": "As"}, {"name": "Assert"}, {"name": "Break"}, {"name": "Const"}, {"name": "Continue"}, {"name": "Def"}, {"name": "Defer"}, {"name": "Else"}, {"name": "Enum"}, {"name": "Extern"}, {"name": "False"}, {"name": "For"}, {"name": "Fn"}, {"name": "If"}, {"name": "Let"}, {"name": "Match"}, {"name": "Namespace"}, {"name": "Null"}, {"name": "Not"}, {"name": "Or"}, {"name": "Return"}, {"name": "SizeOf"}, {"name": "Struct"}, {"name": "True"}, {"name": "Then"}, {"name": "Union"}, {"name": "Import"}, {"name": "Void"}, {"name": "Yield"}, {"name": "While"}], "methods": {"str": {"id": "f90c6c40", "name": "str", "kind": "method", "parent": "{{fa1529b0}}", "params": [{"name": "this", "type": "{{fa1529b0}}"}], "return": {"description": "return for tokens::TokenType::str", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa152aa0", "name": "dbg", "kind": "method", "parent": "{{fa1529b0}}", "params": [{"name": "this", "type": "{{fa1529b0}}"}], "return": {"description": "return for tokens::TokenType::dbg", "type": "{{fa14c3c0}}"}}, "from_text": {"id": "f90bf1f0", "name": "from_text", "kind": "method", "parent": "{{fa1529b0}}", "params": [{"name": "text", "type": "{{fa14c3c0}}"}], "return": {"description": "return for tokens::TokenType::from_text", "type": "{{fa1529b0}}"}}}}}, "structs": {"Token": {"id": "fa1528a0", "name": "Token", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa1529b0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "text", "type": "{{fa14c3c0}}"}, {"name": "suffix", "type": "&{{fa1528a0}}"}, {"name": "seen_newline", "type": "{{fa14acb0}}"}, {"name": "comment", "type": "{{fa14c3c0}}", "description": "Comment occuring *before* this token\n"}, {"name": "comment_loc", "type": "{{fa14d210}}"}], "methods": {"str": {"id": "f90b68c0", "name": "str", "kind": "method", "parent": "{{fa1528a0}}", "params": [{"name": "this", "type": "&{{fa1528a0}}"}], "return": {"description": "return for tokens::Token::str", "type": "{{fa14c3c0}}"}}, "new": {"id": "f90af1f0", "name": "new", "kind": "method", "parent": "{{fa1528a0}}", "params": [{"name": "type", "type": "{{fa1529b0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "text", "type": "{{fa14c3c0}}"}], "return": {"description": "return for tokens::Token::new", "type": "&{{fa1528a0}}"}}, "from_type": {"id": "f90b31a0", "name": "from_type", "kind": "method", "parent": "{{fa1528a0}}", "params": [{"name": "type", "type": "{{fa1529b0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for tokens::Token::from_type", "type": "&{{fa1528a0}}"}}, "from_ident": {"id": "f90b4970", "name": "from_ident", "kind": "method", "parent": "{{fa1528a0}}", "params": [{"name": "text", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for tokens::Token::from_ident", "type": "&{{fa1528a0}}"}}, "is_word": {"id": "f90b89d0", "name": "is_word", "kind": "method", "parent": "{{fa1528a0}}", "params": [{"name": "this", "type": "{{fa1528a0}}"}], "return": {"description": "return for tokens::Token::is_word", "type": "{{fa14acb0}}"}}}}}, "functions": {}}, "errors": {"id": "f91b5940", "description": "Utilities for displaying errors\n", "name": "errors", "kind": "namespace", "enums": {"ErrorType": {"id": "fa152f90", "name": "ErrorType", "kind": "enum", "fields": [{"name": "Standard"}, {"name": "WithNote"}, {"name": "WithHint"}], "methods": {"str": {"id": "f91dd1a0", "name": "str", "kind": "method", "parent": "{{fa152f90}}", "params": [{"name": "this", "type": "{{fa152f90}}"}], "return": {"description": "return for errors::ErrorType::str", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa153080", "name": "dbg", "kind": "method", "parent": "{{fa152f90}}", "params": [{"name": "this", "type": "{{fa152f90}}"}], "return": {"description": "return for errors::ErrorType::dbg", "type": "{{fa14c3c0}}"}}}}, "MessageType": {"id": "fa153460", "name": "MessageType", "kind": "enum", "fields": [{"name": "Error"}, {"name": "Warning"}, {"name": "Note"}], "methods": {"str": {"id": "f91e0d80", "name": "str", "kind": "method", "parent": "{{fa153460}}", "params": [{"name": "this", "type": "{{fa153460}}"}], "return": {"description": "return for errors::MessageType::str", "type": "{{fa14c3c0}}"}}, "to_color": {"id": "f91df850", "name": "to_color", "kind": "method", "parent": "{{fa153460}}", "params": [{"name": "this", "type": "{{fa153460}}"}], "return": {"description": "return for errors::MessageType::to_color", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa153550", "name": "dbg", "kind": "method", "parent": "{{fa153460}}", "params": [{"name": "this", "type": "{{fa153460}}"}], "return": {"description": "return for errors::MessageType::dbg", "type": "{{fa14c3c0}}"}}}}}, "structs": {"Error": {"id": "fa152e80", "name": "Error", "kind": "struct", "is_templated": false, "fields": [{"name": "type", "type": "{{fa152f90}}"}, {"name": "msg1", "type": "{{fa14c3c0}}"}, {"name": "span1", "type": "{{fa14d2e0}}"}, {"name": "msg2", "type": "{{fa14c3c0}}"}, {"name": "span2", "type": "{{fa14d2e0}}"}], "methods": {"panic": {"id": "f91fbbf0", "name": "panic", "kind": "method", "parent": "{{fa152e80}}", "params": [{"name": "this", "type": "&{{fa152e80}}"}], "return": {"description": "return for errors::Error::panic", "type": "{{fa14ae40}}"}}, "new": {"id": "f91fce10", "name": "new", "kind": "method", "parent": "{{fa152e80}}", "params": [{"name": "span", "type": "{{fa14d2e0}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for errors::Error::new", "type": "&{{fa152e80}}"}}, "new_hint": {"id": "f9202fe0", "name": "new_hint", "kind": "method", "parent": "{{fa152e80}}", "params": [{"name": "span", "type": "{{fa14d2e0}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}, {"name": "span2", "type": "{{fa14d2e0}}"}, {"name": "hint", "type": "{{fa14c3c0}}"}], "return": {"description": "return for errors::Error::new_hint", "type": "&{{fa152e80}}"}}, "new_note": {"id": "f91ffb40", "name": "new_note", "kind": "method", "parent": "{{fa152e80}}", "params": [{"name": "span", "type": "{{fa14d2e0}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}, {"name": "note", "type": "{{fa14c3c0}}"}], "return": {"description": "return for errors::Error::new_note", "type": "&{{fa152e80}}"}}, "display": {"id": "f91f64a0", "name": "display", "kind": "method", "parent": "{{fa152e80}}", "params": [{"name": "this", "type": "&{{fa152e80}}"}], "return": {"description": "return for errors::Error::display", "type": "{{fa14ae40}}"}}}}}, "functions": {"display_line": {"id": "f91e2210", "name": "display_line", "kind": "function", "params": [], "return": {"description": "return for errors::display_line", "type": "{{fa14ae40}}"}}, "display_message": {"id": "f91e2d20", "name": "display_message", "kind": "function", "params": [{"name": "type", "type": "{{fa153460}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for errors::display_message", "type": "{{fa14ae40}}"}}, "display_message_span": {"id": "f91e50d0", "name": "display_message_span", "kind": "function", "params": [{"name": "type", "type": "{{fa153460}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "msg", "type": "{{fa14c3c0}}"}], "return": {"description": "return for errors::display_message_span", "type": "{{fa14ae40}}"}}, "display_error_messages": {"id": "f9206b50", "name": "display_error_messages", "kind": "function", "params": [{"name": "errors", "type": "&{{fa14d3d0}}<&{{fa152e80}}>"}, {"name": "detail_level", "type": "{{fa14bb30}}"}], "return": {"description": "return for errors::display_error_messages", "type": "{{fa14ae40}}"}}}}, "types": {"id": "f90cdf30", "description": "Contains the structs for the type system.\n", "name": "types", "kind": "namespace", "enums": {"BaseType": {"id": "fa153ec0", "name": "BaseType", "kind": "enum", "fields": [{"name": "Char"}, {"name": "Bool"}, {"name": "Void"}, {"name": "I8"}, {"name": "I16"}, {"name": "I32"}, {"name": "I64"}, {"name": "U8"}, {"name": "U16"}, {"name": "U32"}, {"name": "U64"}, {"name": "F32"}, {"name": "F64"}, {"name": "NUM_BASE_TYPES", "description": "For convenience, to iterate over all the base types\n"}, {"name": "Pointer"}, {"name": "Function"}, {"name": "Structure"}, {"name": "Enum"}, {"name": "Unresolved"}, {"name": "Array"}, {"name": "Alias"}, {"name": "UnresolvedTemplate"}, {"name": "Error"}], "methods": {"str": {"id": "f9104ef0", "name": "str", "kind": "method", "parent": "{{fa153ec0}}", "params": [{"name": "this", "type": "{{fa153ec0}}"}], "return": {"description": "return for types::BaseType::str", "type": "{{fa14c3c0}}"}}, "dbg": {"id": "fa153f90", "name": "dbg", "kind": "method", "parent": "{{fa153ec0}}", "params": [{"name": "this", "type": "{{fa153ec0}}"}], "return": {"description": "return for types::BaseType::dbg", "type": "{{fa14c3c0}}"}}}}}, "structs": {"FunctionType": {"id": "fa153940", "name": "FunctionType", "kind": "struct", "is_templated": false, "fields": [{"name": "orig", "type": "&{{fa14ffb0}}", "description": "`null` if this is a function pointer\n"}, {"name": "return_type", "type": "&{{fa153e20}}"}, {"name": "params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}], "methods": {"from_func": {"id": "f91092a0", "name": "from_func", "kind": "method", "parent": "{{fa153940}}", "params": [{"name": "func", "type": "&{{fa14ffb0}}"}], "return": {"description": "return for types::FunctionType::from_func", "type": "&{{fa153940}}"}}, "from_args": {"id": "f910bf30", "name": "from_args", "kind": "method", "parent": "{{fa153940}}", "params": [{"name": "params", "type": "&{{fa14d3d0}}<&{{fa14f9e0}}>"}, {"name": "return_type", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::FunctionType::from_args", "type": "&{{fa153940}}"}}}}, "ArrayType": {"id": "fa153a50", "name": "ArrayType", "kind": "struct", "is_templated": false, "fields": [{"name": "elem_type", "type": "&{{fa153e20}}"}, {"name": "size_expr", "type": "&{{fa1517c0}}"}], "methods": {"new": {"id": "f910f450", "name": "new", "kind": "method", "parent": "{{fa153a50}}", "params": [{"name": "elem_type", "type": "&{{fa153e20}}"}, {"name": "size_expr", "type": "&{{fa1517c0}}"}], "return": {"description": "return for types::ArrayType::new", "type": "&{{fa153a50}}"}}}}, "UnresolvedTemplate": {"id": "fa153b60", "name": "UnresolvedTemplate", "kind": "struct", "is_templated": false, "fields": [{"name": "base", "type": "&{{fa153e20}}"}, {"name": "args", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}], "methods": {"new": {"id": "f9112990", "name": "new", "kind": "method", "parent": "{{fa153b60}}", "params": [{"name": "base", "type": "&{{fa153e20}}"}, {"name": "args", "type": "&{{fa14d3d0}}<&{{fa153e20}}>"}], "return": {"description": "return for types::UnresolvedTemplate::new", "type": "&{{fa153b60}}"}}}}, "TypeUnion": {"id": "fa153c70", "name": "TypeUnion", "kind": "struct", "is_templated": false, "fields": [{"name": "ptr", "type": "&{{fa153e20}}"}, {"name": "func", "type": "&{{fa153940}}"}, {"name": "struc", "type": "&{{fa14fd10}}"}, {"name": "enum_", "type": "&{{fa14ff10}}"}, {"name": "unresolved", "type": "&{{fa1517c0}}"}, {"name": "arr", "type": "&{{fa153a50}}"}, {"name": "unresolved_spec", "type": "&{{fa153b60}}"}], "methods": {}}, "Type": {"id": "fa153e20", "name": "Type", "kind": "struct", "is_templated": false, "fields": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "base", "type": "{{fa153ec0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}, {"name": "u", "type": "{{fa153c70}}"}, {"name": "methods", "type": "&{{fa14cd70}}<{{fa14c3c0}}, &{{fa14ffb0}}>"}, {"name": "sym", "type": "&{{fa14efa0}}"}, {"name": "template_instance", "type": "&{{fa14fc00}}", "description": "This is used for specializations, so that they can point to the original\ntemplate instance and the template arguments.\n"}], "methods": {"str": {"id": "f90ce120", "name": "str", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::str", "type": "{{fa14c3c0}}"}}, "is_float": {"id": "f9122c20", "name": "is_float", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::is_float", "type": "{{fa14acb0}}"}}, "eq": {"id": "f91285f0", "name": "eq", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}, {"name": "other", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::eq", "type": "{{fa14acb0}}"}}, "is_str": {"id": "f9134760", "name": "is_str", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::is_str", "type": "{{fa14acb0}}"}}, "is_integer": {"id": "f91213a0", "name": "is_integer", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::is_integer", "type": "{{fa14acb0}}"}}, "new_resolved": {"id": "f91187b0", "name": "new_resolved", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "base", "type": "{{fa153ec0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for types::Type::new_resolved", "type": "&{{fa153e20}}"}}, "new_unresolved_base": {"id": "f911e160", "name": "new_unresolved_base", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "base", "type": "{{fa153ec0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for types::Type::new_unresolved_base", "type": "&{{fa153e20}}"}}, "decay_array": {"id": "f9137160", "name": "decay_array", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::decay_array", "type": "&{{fa153e20}}"}}, "unaliased": {"id": "f9135af0", "name": "unaliased", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::unaliased", "type": "&{{fa153e20}}"}}, "is_numeric": {"id": "f91236a0", "name": "is_numeric", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::is_numeric", "type": "{{fa14acb0}}"}}, "new_unresolved": {"id": "f911c2c0", "name": "new_unresolved", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "name", "type": "{{fa14c3c0}}"}, {"name": "span", "type": "{{fa14d2e0}}"}], "return": {"description": "return for types::Type::new_unresolved", "type": "&{{fa153e20}}"}}, "is_numeric_or_char": {"id": "f9125660", "name": "is_numeric_or_char", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::is_numeric_or_char", "type": "{{fa14acb0}}"}}, "can_have_methods": {"id": "f9126140", "name": "can_have_methods", "kind": "method", "parent": "{{fa153e20}}", "params": [{"name": "this", "type": "&{{fa153e20}}"}], "return": {"description": "return for types::Type::can_have_methods", "type": "{{fa14acb0}}"}}}}}, "functions": {}}, "main": {"id": "f8e87480", "description": "Entry point for the compiler\n", "name": "main", "kind": "namespace", "variables": {"exec_path": {"id": "fa12d930", "name": "exec_path", "kind": "variable", "type": "{{fa14c3c0}}"}, "c_path": {"id": "fa12de00", "name": "c_path", "kind": "variable", "type": "{{fa14c3c0}}"}, "filename": {"id": "fa12e2d0", "name": "filename", "kind": "variable", "type": "{{fa14c3c0}}"}, "compile_c": {"id": "fa12e7a0", "name": "compile_c", "kind": "variable", "type": "{{fa14acb0}}"}, "silent": {"id": "fa12ec70", "name": "silent", "kind": "variable", "type": "{{fa14acb0}}"}, "debug": {"id": "fa12f140", "name": "debug", "kind": "variable", "type": "{{fa14acb0}}"}, "error_level": {"id": "fa12f610", "name": "error_level", "kind": "variable", "type": "{{fa14bb30}}"}, "docs_path": {"id": "fa12fae0", "name": "docs_path", "kind": "variable", "type": "{{fa14c3c0}}"}}, "functions": {"usage": {"id": "fa127c00", "name": "usage", "kind": "function", "params": [{"name": "code", "type": "{{fa14b3e0}}"}], "return": {"description": "return for usage", "type": "{{fa14ae40}}"}}, "save_and_compile_code": {"id": "fa12fe20", "name": "save_and_compile_code", "kind": "function", "params": [{"name": "program", "type": "&{{fa14f7c0}}"}, {"name": "code", "type": "{{fa14c3c0}}"}], "return": {"description": "return for save_and_compile_code", "type": "{{fa14ae40}}"}}, "main": {"id": "fa139f80", "name": "main", "kind": "function", "params": [{"name": "argc", "type": "{{fa14b3e0}}"}, {"name": "argv", "type": "&{{fa14c3c0}}"}], "return": {"description": "return for main", "type": "{{fa14b3e0}}"}}}}}}}, "builtins": {"char": {"id": "fa14ab20", "name": "char", "description": "Built-in type char", "kind": "builtin", "methods": {"is_alpha": {"id": "f8ee5f70", "name": "is_alpha", "kind": "method", "parent": "{{fa14ab20}}", "params": [{"name": "this", "type": "{{fa14ab20}}"}], "return": {"description": "return for char::is_alpha", "type": "{{fa14acb0}}"}}, "is_print": {"id": "f8ee7c70", "name": "is_print", "kind": "method", "parent": "{{fa14ab20}}", "params": [{"name": "this", "type": "{{fa14ab20}}"}], "return": {"description": "return for char::is_print", "type": "{{fa14acb0}}"}}, "is_alnum": {"id": "f8ee6df0", "name": "is_alnum", "kind": "method", "parent": "{{fa14ab20}}", "params": [{"name": "this", "type": "{{fa14ab20}}"}], "return": {"description": "return for char::is_alnum", "type": "{{fa14acb0}}"}}, "is_digit": {"id": "f8ee50f0", "name": "is_digit", "kind": "method", "parent": "{{fa14ab20}}", "params": [{"name": "this", "type": "{{fa14ab20}}"}], "return": {"description": "return for char::is_digit", "type": "{{fa14acb0}}"}}}}, "bool": {"id": "fa14acb0", "name": "bool", "description": "Built-in type bool", "kind": "builtin", "methods": {}}, "void": {"id": "fa14ae40", "name": "void", "description": "Built-in type void", "kind": "builtin", "methods": {}}, "i8": {"id": "fa14afd0", "name": "i8", "description": "Built-in type i8", "kind": "builtin", "methods": {}}, "i16": {"id": "fa14b160", "name": "i16", "description": "Built-in type i16", "kind": "builtin", "methods": {}}, "i32": {"id": "fa14b3e0", "name": "i32", "description": "Built-in type i32", "kind": "builtin", "methods": {"eq": {"id": "f8fe1210", "name": "eq", "kind": "method", "parent": "{{fa14b3e0}}", "params": [{"name": "this", "type": "{{fa14b3e0}}"}, {"name": "other", "type": "{{fa14b3e0}}"}], "return": {"description": "return for i32::eq", "type": "{{fa14acb0}}"}}, "hash": {"id": "f8fdc4f0", "name": "hash", "kind": "method", "parent": "{{fa14b3e0}}", "params": [{"name": "this", "type": "{{fa14b3e0}}"}], "return": {"description": "return for i32::hash", "type": "{{fa14bb30}}"}}}}, "i64": {"id": "fa14b530", "name": "i64", "description": "Built-in type i64", "kind": "builtin", "methods": {}}, "u8": {"id": "fa14b680", "name": "u8", "description": "Built-in type u8", "kind": "builtin", "methods": {}}, "u16": {"id": "fa14b7f0", "name": "u16", "description": "Built-in type u16", "kind": "builtin", "methods": {}}, "u32": {"id": "fa14bb30", "name": "u32", "description": "Built-in type u32", "kind": "builtin", "methods": {"eq": {"id": "f8fe19b0", "name": "eq", "kind": "method", "parent": "{{fa14bb30}}", "params": [{"name": "this", "type": "{{fa14bb30}}"}, {"name": "other", "type": "{{fa14bb30}}"}], "return": {"description": "return for u32::eq", "type": "{{fa14acb0}}"}}, "max": {"id": "f8eec1e0", "name": "max", "kind": "method", "parent": "{{fa14bb30}}", "params": [{"name": "this", "type": "{{fa14bb30}}"}, {"name": "other", "type": "{{fa14bb30}}"}], "return": {"description": "return for u32::max", "type": "{{fa14bb30}}"}}, "hash": {"id": "f8fdd2a0", "name": "hash", "kind": "method", "parent": "{{fa14bb30}}", "params": [{"name": "this", "type": "{{fa14bb30}}"}], "return": {"description": "return for u32::hash", "type": "{{fa14bb30}}"}}, "min": {"id": "f8eeaf90", "name": "min", "kind": "method", "parent": "{{fa14bb30}}", "params": [{"name": "this", "type": "{{fa14bb30}}"}, {"name": "other", "type": "{{fa14bb30}}"}], "return": {"description": "return for u32::min", "type": "{{fa14bb30}}"}}}}, "u64": {"id": "fa14bc80", "name": "u64", "description": "Built-in type u64", "kind": "builtin", "methods": {}}, "f32": {"id": "fa14bdd0", "name": "f32", "description": "Built-in type f32", "kind": "builtin", "methods": {}}, "f64": {"id": "fa14bf20", "name": "f64", "description": "Built-in type f64", "kind": "builtin", "methods": {}}, "str": {"id": "fa14c3c0", "name": "str", "description": "Built-in type str", "kind": "builtin", "methods": {"copy": {"id": "f8edcaa0", "name": "copy", "kind": "method", "parent": "{{fa14c3c0}}", "extern": "strdup", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::copy", "type": "{{fa14c3c0}}"}}, "concat": {"id": "f8edc220", "name": "concat", "kind": "method", "parent": "{{fa14c3c0}}", "extern": "strcat", "params": [{"name": "this", "type": "{{fa14c3c0}}"}, {"name": "src", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::concat", "type": "{{fa14ae40}}"}}, "eq": {"id": "f8ed9f60", "name": "eq", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}, {"name": "other", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::eq", "type": "{{fa14acb0}}"}}, "len": {"id": "f8edb3a0", "name": "len", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::len", "type": "{{fa14bb30}}"}}, "replace_with": {"id": "f8ee3a10", "name": "replace_with", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "&{{fa14c3c0}}"}, {"name": "other", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::replace_with", "type": "{{fa14ae40}}"}}, "substring": {"id": "f8edd0f0", "name": "substring", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}, {"name": "start", "type": "{{fa14bb30}}"}, {"name": "len", "type": "{{fa14bb30}}"}], "return": {"description": "return for str::substring", "type": "{{fa14c3c0}}"}}, "to_u32": {"id": "f8ed9100", "name": "to_u32", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::to_u32", "type": "{{fa14bb30}}"}}, "hash": {"id": "f8fd9a70", "name": "hash", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::hash", "type": "{{fa14bb30}}"}}, "remove_last_n": {"id": "f8e87f70", "name": "remove_last_n", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}, {"name": "n", "type": "{{fa14bb30}}"}], "return": {"description": "return for str::remove_last_n", "type": "{{fa14ae40}}"}}, "strip_trailing_whitespace": {"id": "f8ee0010", "name": "strip_trailing_whitespace", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::strip_trailing_whitespace", "type": "{{fa14ae40}}"}}, "replace": {"id": "f9d474d0", "name": "replace", "kind": "method", "parent": "{{fa14c3c0}}", "params": [{"name": "this", "type": "&{{fa14c3c0}}"}, {"name": "other", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::replace", "type": "{{fa14ae40}}"}}, "to_i32": {"id": "f8ed8ab0", "name": "to_i32", "kind": "method", "parent": "{{fa14c3c0}}", "extern": "atoi", "params": [{"name": "this", "type": "{{fa14c3c0}}"}], "return": {"description": "return for str::to_i32", "type": "{{fa14b3e0}}"}}}}, "untyped_ptr": {"id": "fa14c140", "name": "untyped_ptr", "description": "Built-in type untyped_ptr", "kind": "builtin", "methods": {}}}}}