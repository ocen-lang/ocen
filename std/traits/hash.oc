def str::hash(this): u32 {
    let hash = 5381
    let len = .len()
    for let i = 0; i < len; i += 1 {
        hash = hash * 33 ^ this[i] as u32
    }
    return hash
}

def pair_hash(a: u32, b: u32): u32 => a * 33 ^ b

def u8::hash(this): u32 => this as u32 * 7817 // Some random prime number
def i8::hash(this): u32 => this as u32 * 7817 // Some random prime number
def u16::hash(this): u32 => this as u32 * 7817 // Some random prime number
def i16::hash(this): u32 => this as u32 * 7817 // Some random prime number
def u32::hash(this): u32 => this as u32 * 7817 // Some random prime number
def i32::hash(this): u32 => this as u32 * 7817 // Some random prime number
def u64::hash(this): u32 => pair_hash((this as u32).hash(), ((this >> 32) as u32).hash())
def i64::hash(this): u32 => pair_hash((this as u32).hash(), ((this >> 32) as u32).hash())
def char::hash(this): u32 => this as u32 * 7817 // Some random prime number
def f32::hash(this): u32 => this as u32 * 7817 // Some random prime number
def f64::hash(this): u32 => (this as u64).hash()
