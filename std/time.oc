//! Bindings to the C standard library's time functions.

@compiler c_include "time.h"

[extern "time_t"] struct Time {}
[extern "struct tm"] struct TM {
    tm_mday: i32
    tm_wday: i32
}

[extern] def time(t: &Time): Time
[extern] def localtime(t: &Time): &TM
[extern] def mktime(tm: &TM): Time
[extern] def strftime(s: untyped_ptr, maxsize: u32, format: str, timeptr: &TM): u32

[extern "struct timeval"] struct TimeVal {
    tv_sec: i64
    tv_usec: i64
}

[extern "struct timespec"] struct TimeSpec {
    tv_sec: i64
    tv_nsec: i64
}
[extern] def clock_gettime(clock_id: i32, ts: &TimeSpec): i32
[extern] const CLOCK_MONOTONIC: i32

def get_time_monotonic_ms(): f64 {
    let tv: TimeSpec
    clock_gettime(CLOCK_MONOTONIC, &tv)
    return tv.tv_sec as f64 * 1000.0 + tv.tv_nsec as f64 / 1000000.0
}