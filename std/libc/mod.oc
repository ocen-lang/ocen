//! Bindings to libc functions
@compiler c_include "string.h"
@compiler c_include "ctype.h"


// stdlib
[extern] def free(ptr: untyped_ptr)
[extern] def getenv(name: str): str
[extern] def system(cmd: str): i32
[extern] def atexit(callback: fn())

[extern] [exits] def exit(code: i32)

// string
[extern] def strcmp(a: str, b: str): i32
[extern] def strlen(s: str): u32
[extern] def strcpy(dst: str, src: str): str
[extern] def strcat(dst: str, src: str): str
[extern] def strstr(haystack: str, needle: str): str
[extern] def strchr(s: str, c: i32): str
[extern] def strsep(str: &str, delim: str): str
[extern] def strerror(errnum: i32): str
[extern] def memcpy(dest: untyped_ptr, src: untyped_ptr, size: u32)
[extern] def memmove(dest: untyped_ptr, src: untyped_ptr, size: u32)
[extern] def memcmp(s: untyped_ptr, other: untyped_ptr, n: u32): i32
[extern] def memset(dest: untyped_ptr, c: u8, size: u32)

[variadic_format]
[extern] def sprintf(buf: str, fmt: str, ...): i32

[variadic_format]
[extern] def snprintf(buf: str, size: u32, fmt: str, ...): i32

// ctype
[extern] def isdigit(c: char): bool
[extern] def isxdigit(c: char): bool
[extern] def isalpha(c: char): bool
[extern] def isalnum(c: char): bool
[extern] def isprint(c: char): bool
[extern] def isspace(c: char): bool
[extern] def toupper(c: char): char
[extern] def tolower(c: char): char
[extern] def islower(c: char): bool
[extern] def isupper(c: char): bool

[extern] def strtoll(s: str, endptr: &str, base: i32 = 10): i64
[extern] def strtol(s: str, endptr: &str, base: i32 = 10): i32
[extern] def strtoul(s: str, endptr: &str, base: i32 = 10): u64
[extern] def strtof(s: str, endptr: &str): f32
[extern] def strtod(s: str, endptr: &str): f64

// macros
[extern] const STDIN_FILENO: i32
[extern] const EXIT_FAILURE: i32
[extern] const EXIT_SUCCESS: i32

