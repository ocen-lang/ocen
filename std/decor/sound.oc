

const SOUND_NUM_CHANNELS = 32

def sound_init() {
    let res = SDLMixer::open_audio(44100, MIX_DEFAULT_FORMAT, 2, 1024)
    if res != 0 {
        println(`Could not open audio: {SDLMixer::get_error()}`)
        exit(1)
    }
    SDLMixer::allocate_channels(SOUND_NUM_CHANNELS)
}

def set_sound_muted(muted: bool) {
    if muted {
        SDLMixer::pause(-1)
    } else {
        SDLMixer::resume(-1)
    }
}

def set_sound_volume(volume: i32) {
    SDLMixer::volume(-1, volume)
}

def set_channel_volume(channel: i32, volume: i32) {
    SDLMixer::volume(channel, volume)
}

def Sound::load(path: string): &Sound {
    let chunk = SDLMixer::load_wav(path)
    if chunk == null {
        println(`Could not load sound: {SDLMixer::get_error()}`)
        exit(1)
    }
    return chunk
}

def Sound::play(&this, channel: i32, times: i32) {
    let time = if times == -1 then -1 else times - 1
    SDLMixer::play_channel(channel, this, time)
}

def Sound::play_once(&this) {
    .play(channel: -1, times: 1)
}
