// Do not include this file directly, use lib/daecor/all.ae

use "lib/math.ae"

def Color::rgb(r: i32, g: i32, b:i32): Color => Color(r, g, b, 255)

def Color::rand(): Color {
    return Color::rgb(
        randint() % 255,
        randint() % 255,
        randint() % 255,
    )
}

def Color::str(this): string => `rgb({this.r}, {this.g}, {this.b}, {this.a})`

def Color::White(): Color   => Color(0xFF, 0xFF, 0xFF, 0xFF)
def Color::Pink(): Color    => Color(0xFF, 0xC0, 0xCB, 0xFF)
def Color::Cyan(): Color    => Color(0x00, 0xFF, 0xFF, 0xFF)
def Color::Red(): Color     => Color(0xFF, 0x00, 0x00, 0xFF)
def Color::Yellow(): Color  => Color(0xFF, 0xFF, 0x00, 0xFF)
def Color::Green(): Color   => Color(0x00, 0xFF, 0x00, 0xFF)
def Color::Blue(): Color    => Color(0x00, 0x00, 0xFF, 0xFF)
def Color::Magenta(): Color => Color(0xFF, 0x00, 0xFF, 0xFF)
def Color::Black(): Color   => Color(0x00, 0x00, 0x00, 0xFF)
def Color::Grey(): Color    => Color(0x80, 0x80, 0x80, 0xFF)

def Color::Grey1(): Color => Color(0xAA, 0xAA, 0xAA, 0xFF)
def Color::Grey2(): Color => Color(0x7E, 0x7E, 0x7E, 0xFF)
def Color::Grey3(): Color => Color(0x52, 0x52, 0x52, 0xFF)

def Color::to_u32(this): u32 {
    return (
        .r << 0 | .g << 8 | .b << 16 | .a << 24
    ) as u32
}

def Color::from_u32(val: u32): Color {
    return Color(
        ((val as i32 >> 0) & 0xff) as i32,
        ((val as i32 >> 8) & 0xff) as i32,
        ((val as i32 >> 16) & 0xff) as i32,
        ((val as i32 >> 24) & 0xff) as i32,
    )
}