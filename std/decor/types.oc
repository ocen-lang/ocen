// Do not include this file directly, use lib/daecor/all.ae

struct Time extern("time_t")

def register_exit_callback(func: fn()) extern("atexit")


def Rect::from_points(p1: Vec2i, p2: Vec2i): Rect
    => Rect(p1.x, p1.y, p2.x - p1.x, p2.y - p1.y)

def Rect::corner(this): Vec2i =>Vec2i(.x, .y)
def Rect::size(this): Vec2i => Vec2i(.w, .h)


enum Direction {
    Up
    Right
    Down
    Left
}

def Direction::to_char(this): char => match this {
    Up => 'U',
    Right => 'R',
    Down => 'D',
    Left => 'L'
}

def Direction::offset(this, amount: i32): Direction {
    return (((this as i32) + amount) % 4) as Direction
}

def Direction::inv(this): Direction => .offset(2)
def Direction::rot_left(this): Direction => .offset(-1)
def Direction::rot_right(this): Direction => .offset(1)

def absf(a: f32): f32 extern("fabs")

def abs(a: i32): i32 => if a < 0 then -a else a
def sign(x: i32): i32 => if x < 0 then -1 else 1
def signf(x: f32): f32 => if x < 0.0 then -1.0 else 1.0

def match_sign(target: i32, val: i32): i32 {
    return if target < 0 then -val else val
}

def match_signf(target: f32, val: f32): f32 {
    return if target < 0.0 then -val else val
}
