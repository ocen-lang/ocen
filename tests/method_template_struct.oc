/// out: "3 2"

import std::mem

struct List<T> {
    data: &T
    size: u32
    capacity: u32
}

def List::new(capacity: u32 = 16): &List<T> {
    let list = mem::alloc<List<T>>()
    list.capacity = capacity
    list.data = mem::alloc<T>(capacity)
    list.size = 0
    return list
}

def List::push(&this, value: T) {
    if .size == .capacity {
        let new_capacity = .capacity * 2
        .data = mem::realloc<T>(.data, .capacity, new_capacity)
        .capacity = new_capacity
    }
    .data[.size] = value
    .size += 1
}

def main() {
    let foo = List<i32>::new()
    foo.push(1)
    foo.push(2)
    foo.push(3)

    let bar = List<str>::new()
    bar.push("hello")
    bar.push("world")

    println(f"{foo.size} {bar.size}")
}